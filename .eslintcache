[{"C:\\Users\\Admin\\Desktop\\Mail-Box-Clients\\MailBox -Client\\src\\index.js":"1","C:\\Users\\Admin\\Desktop\\Mail-Box-Clients\\MailBox -Client\\src\\App.js":"2","C:\\Users\\Admin\\Desktop\\Mail-Box-Clients\\MailBox -Client\\src\\Store\\store.js":"3","C:\\Users\\Admin\\Desktop\\Mail-Box-Clients\\MailBox -Client\\src\\Store\\Auth.js":"4","C:\\Users\\Admin\\Desktop\\Mail-Box-Clients\\MailBox -Client\\src\\Store\\Uivisible.js":"5","C:\\Users\\Admin\\Desktop\\Mail-Box-Clients\\MailBox -Client\\src\\Component\\AuthForm\\AuthForm.js":"6","C:\\Users\\Admin\\Desktop\\Mail-Box-Clients\\MailBox -Client\\src\\Store\\Action-thunk.js":"7","C:\\Users\\Admin\\Desktop\\Mail-Box-Clients\\MailBox -Client\\src\\Component\\TextEditing\\TextEditing.js":"8","C:\\Users\\Admin\\Desktop\\Mail-Box-Clients\\MailBox -Client\\src\\Store\\MailSlice.js":"9","C:\\Users\\Admin\\Desktop\\Mail-Box-Clients\\MailBox -Client\\src\\Store\\Mail-thunk.js":"10","C:\\Users\\Admin\\Desktop\\Mail-Box-Clients\\MailBox -Client\\src\\Component\\InboxPage.js\\InboxPage.js":"11","C:\\Users\\Admin\\Desktop\\Mail-Box-Clients\\MailBox -Client\\src\\Component\\InboxPage.js\\InboxList.js":"12","C:\\Users\\Admin\\Desktop\\Mail-Box-Clients\\MailBox -Client\\src\\Component\\InboxPage.js\\InboxNavbar.js":"13","C:\\Users\\Admin\\Desktop\\Mail-Box-Clients\\MailBox -Client\\src\\Component\\InboxPage.js\\InboxListItem.js":"14","C:\\Users\\Admin\\Desktop\\Mail-Box-Clients\\MailBox -Client\\src\\Component\\InboxPage.js\\MessageView.js":"15","C:\\Users\\Admin\\Desktop\\Mail-Box-Clients\\MailBox -Client\\src\\Component\\InboxPage.js\\Sentmessage\\SentMessage.js":"16","C:\\Users\\Admin\\Desktop\\Mail-Box-Clients\\MailBox -Client\\src\\Component\\InboxPage.js\\Sentmessage\\SendmessageItem.js":"17","C:\\Users\\Admin\\Desktop\\Mail-Box-Clients\\MailBox -Client\\src\\Store\\MymailSlice.js":"18","C:\\Users\\Admin\\Desktop\\Mail-Box-Clients\\MailBox -Client\\src\\Component\\InboxPage.js\\Sentmessage\\sentMessageView.js":"19","C:\\Users\\Admin\\Desktop\\Mail-Box-Clients\\MailBox -Client\\src\\Component\\InboxPage.js\\ToggleMenuButton.js":"20","C:\\Users\\Admin\\Desktop\\Mail-Box-Clients\\MailBox -Client\\src\\Component\\profile\\Profile.js":"21","C:\\Users\\Admin\\Desktop\\Mail-Box-Clients\\MailBox -Client\\src\\Component\\InboxPage.js\\DrfatMail\\DraftItem.js":"22","C:\\Users\\Admin\\Desktop\\Mail-Box-Clients\\MailBox -Client\\src\\Component\\InboxPage.js\\DrfatMail\\Daftmessage.js":"23","C:\\Users\\Admin\\Desktop\\Mail-Box-Clients\\MailBox -Client\\src\\Component\\InboxPage.js\\DrfatMail\\draftMessageView.js":"24"},{"size":502,"mtime":1684726368531,"results":"25","hashOfConfig":"26"},{"size":2503,"mtime":1685445758557,"results":"27","hashOfConfig":"26"},{"size":407,"mtime":1670039479314,"results":"28","hashOfConfig":"26"},{"size":424,"mtime":1670111614430,"results":"29","hashOfConfig":"26"},{"size":389,"mtime":1669890450315,"results":"30","hashOfConfig":"26"},{"size":6490,"mtime":1685527053601,"results":"31","hashOfConfig":"26"},{"size":1939,"mtime":1685505560968,"results":"32","hashOfConfig":"26"},{"size":5837,"mtime":1685460705969,"results":"33","hashOfConfig":"26"},{"size":1000,"mtime":1685456964446,"results":"34","hashOfConfig":"26"},{"size":6840,"mtime":1685505560863,"results":"35","hashOfConfig":"26"},{"size":3999,"mtime":1685512489359,"results":"36","hashOfConfig":"26"},{"size":707,"mtime":1685436025200,"results":"37","hashOfConfig":"26"},{"size":8850,"mtime":1685513313948,"results":"38","hashOfConfig":"26"},{"size":2756,"mtime":1685513623723,"results":"39","hashOfConfig":"26"},{"size":1395,"mtime":1685438528538,"results":"40","hashOfConfig":"26"},{"size":937,"mtime":1685441639256,"results":"41","hashOfConfig":"26"},{"size":3236,"mtime":1685457790738,"results":"42","hashOfConfig":"26"},{"size":1254,"mtime":1685450027967,"results":"43","hashOfConfig":"26"},{"size":1045,"mtime":1685436180641,"results":"44","hashOfConfig":"26"},{"size":2909,"mtime":1685445142882,"results":"45","hashOfConfig":"26"},{"size":2036,"mtime":1684909742629,"results":"46","hashOfConfig":"26"},{"size":2878,"mtime":1685457992187,"results":"47","hashOfConfig":"26"},{"size":933,"mtime":1685454145262,"results":"48","hashOfConfig":"26"},{"size":1491,"mtime":1685460327088,"results":"49","hashOfConfig":"26"},{"filePath":"50","messages":"51","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},"lj8f1e",{"filePath":"53","messages":"54","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"55","usedDeprecatedRules":"52"},{"filePath":"56","messages":"57","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"58","messages":"59","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"60","messages":"61","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"62","messages":"63","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"64","messages":"65","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"66","messages":"67","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"68","usedDeprecatedRules":"52"},{"filePath":"69","messages":"70","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"71","usedDeprecatedRules":"52"},{"filePath":"72","messages":"73","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"74","usedDeprecatedRules":"52"},{"filePath":"75","messages":"76","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"77","usedDeprecatedRules":"52"},{"filePath":"78","messages":"79","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"80","messages":"81","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"82","usedDeprecatedRules":"52"},{"filePath":"83","messages":"84","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"85","messages":"86","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"87","messages":"88","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"89","usedDeprecatedRules":"52"},{"filePath":"90","messages":"91","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"92","usedDeprecatedRules":"52"},{"filePath":"93","messages":"94","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"95","messages":"96","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"97","usedDeprecatedRules":"52"},{"filePath":"98","messages":"99","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"100","usedDeprecatedRules":"52"},{"filePath":"101","messages":"102","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"103","usedDeprecatedRules":"52"},{"filePath":"104","messages":"105","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"106","usedDeprecatedRules":"52"},{"filePath":"107","messages":"108","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"109","usedDeprecatedRules":"52"},{"filePath":"110","messages":"111","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},"C:\\Users\\Admin\\Desktop\\Mail-Box-Clients\\MailBox -Client\\src\\index.js",[],["112","113"],"C:\\Users\\Admin\\Desktop\\Mail-Box-Clients\\MailBox -Client\\src\\App.js",["114","115","116","117"],"import { Route, Routes, Navigate } from \"react-router-dom\";\nimport React, { useEffect, Suspense } from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { UpdateMySentItem } from \"./Store/Mail-thunk\";\nimport { useNavigate } from \"react-router-dom\";\nconst InboxPage = React.lazy(() =>\n  import(\"./Component/InboxPage.js/InboxPage\")\n);\nconst TextEditing = React.lazy(() =>\n  import(\"./Component/TextEditing/TextEditing\")\n);\nconst AuthForm = React.lazy(() => import(\"./Component/AuthForm/AuthForm\"));\nconst SentMessage = React.lazy(() =>\n  import(\"./Component/InboxPage.js/Sentmessage/SentMessage\")\n);\nconst InboxList = React.lazy(() =>\n  import(\"./Component/InboxPage.js/InboxList\")\n);\nconst Profile = React.lazy(() => import(\"./Component/profile/Profile\"));\nconst DraftMessage = React.lazy(() =>\n  import(\"./Component/InboxPage.js/DrfatMail/Daftmessage\")\n);\nfunction App() {\n  let loginlocalstore = localStorage.getItem(\"islogin\") === \"true\";\n  // console.log(loginlocalstore);\n  const navi = useNavigate();\n  const islogin = useSelector((state) => state.auth.islogin);\n  const Dispatch = useDispatch();\n  useEffect(() => {\n    if (loginlocalstore || islogin) {\n      navi(\"/main/text-edit\");\n      console.log(\" navi\");\n    }\n    if (!loginlocalstore) {\n      navi(\"/login\");\n    }\n  }, [loginlocalstore]);\n\n  const sentItem = useSelector((state) => state.mymail.sentItem);\n  const sendcount = useSelector((state) => state.mymail.sendcount);\n  useEffect(() => {\n    // console.log(\"updateing seny mail\",sentItem);\n    // if (sendcount > 0) {\n    //   Dispatch(UpdateMySentItem(sentItem));\n    // }\n  }, [sendcount]);\n  // console.log(\"app\", sentItem);\n  return (\n    // <div>\n    <Suspense fallback={<p className=\"loading\">Loading .....</p>}>\n      <Routes>\n        <Route path=\"/login\" element={<AuthForm />}></Route>\n\n        {loginlocalstore && (\n          <Route path=\"/main/*\" element={<InboxPage />}>\n            <Route path=\"profile\" element={<Profile />} />\n            <Route path=\"inboxlist\" element={<InboxList />} />\n            <Route path=\"text-edit\" element={<TextEditing />} />\n            <Route path=\"sentmessage\" element={<SentMessage />} />\n            <Route path=\"draft-mail\" element={<DraftMessage />} />\n          </Route>\n        )}\n        {!loginlocalstore && (\n          <Route element={<Navigate replace to=\"login\" />} />\n        )}\n\n        {/* <TextEditing></TextEditing> */}\n      </Routes>\n    </Suspense>\n    // </div>\n  );\n}\n\nexport default App;\n","C:\\Users\\Admin\\Desktop\\Mail-Box-Clients\\MailBox -Client\\src\\Store\\store.js",[],"C:\\Users\\Admin\\Desktop\\Mail-Box-Clients\\MailBox -Client\\src\\Store\\Auth.js",[],"C:\\Users\\Admin\\Desktop\\Mail-Box-Clients\\MailBox -Client\\src\\Store\\Uivisible.js",[],"C:\\Users\\Admin\\Desktop\\Mail-Box-Clients\\MailBox -Client\\src\\Component\\AuthForm\\AuthForm.js",["118","119","120","121"],"C:\\Users\\Admin\\Desktop\\Mail-Box-Clients\\MailBox -Client\\src\\Store\\Action-thunk.js",[],"C:\\Users\\Admin\\Desktop\\Mail-Box-Clients\\MailBox -Client\\src\\Component\\TextEditing\\TextEditing.js",["122","123"],"import React, { createRef } from \"react\";\r\nimport { Editor } from \"react-draft-wysiwyg\";\r\nimport \"react-draft-wysiwyg/dist/react-draft-wysiwyg.css\";\r\nimport \"./TextEditing.css\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { PostDraft, sendMailHandler } from \"../../Store/Mail-thunk\";\r\nimport { MymailSliceAction } from \"../../Store/MymailSlice\";\r\nimport { useSelector } from \"react-redux\";\r\nimport {\r\n  Box,\r\n  Button,\r\n  Card,\r\n  Container,\r\n  FormControl,\r\n  Grid,\r\n  InputLabel,\r\n  OutlinedInput,\r\n  TextareaAutosize,\r\n  Typography,\r\n} from \"@mui/material\";\r\nimport { Mail } from \"@mui/icons-material\";\r\nconst TextEditing = () => {\r\n  const Disptach = useDispatch();\r\n  const Enteredemail = createRef(null);\r\n  const Enteredsubject = createRef(null);\r\n  const Enteredtext = createRef(null);\r\n  const sentItemlist = useSelector((state) => state.mymail.sentItem);\r\n  let usermail = localStorage.getItem(\"mailid\");\r\n  let token = localStorage.getItem(\"id\");\r\n  const FormsubmitHandler = (event) => {\r\n    event.preventDefault();\r\n\r\n    // let uid = Date.now().toString(36) + Math.random().toString(36).substr(2);\r\n    const mailData = {\r\n      To: Enteredemail.current.value,\r\n      subject: Enteredsubject.current.value,\r\n      text: Enteredtext.current.value,\r\n      // From: localStorage.getItem(\"mailid\"),\r\n      readreceipt: false,\r\n    };\r\n    if (mailData.To === \"\") {\r\n      return;\r\n    }\r\n\r\n    Disptach(sendMailHandler(mailData, token));\r\n\r\n    Enteredemail.current.value = null;\r\n    Enteredsubject.current.value = null;\r\n    Enteredtext.current.value = null;\r\n  };\r\n  const DraftHandler = () => {\r\n    const mailData = {\r\n      To: Enteredemail.current.value,\r\n      subject: Enteredsubject.current.value,\r\n      text: Enteredtext.current.value,\r\n      // From: localStorage.getItem(\"mailid\"),\r\n      readreceipt: false,\r\n    };\r\n    Disptach(PostDraft(mailData, token));\r\n    Enteredemail.current.value = null;\r\n    Enteredsubject.current.value = null;\r\n    Enteredtext.current.value = null;\r\n  };\r\n  return (\r\n    <React.Fragment>\r\n      <Container maxWidth=\"md\">\r\n        <Box mt={3}>\r\n          <Card>\r\n            <Box p={2} sx={{ background: \"lightgreen\", borderRadius: 5 }}>\r\n              <Typography variant=\"h5\" component=\"h2\" mb={2}>\r\n                Compose Email\r\n                <Mail style={{ marginRight: \"8px\" }} />\r\n              </Typography>\r\n\r\n              <form onSubmit={FormsubmitHandler}>\r\n                <Grid container spacing={2}>\r\n                  <Grid item xs={12} md={12}>\r\n                    <FormControl fullWidth>\r\n                      <InputLabel htmlFor=\"from\">From</InputLabel>\r\n                      <OutlinedInput\r\n                        sx={{ background: \"white\" }}\r\n                        id=\"from\"\r\n                        type=\"email\"\r\n                        placeholder=\"From\"\r\n                        value={usermail}\r\n                        label=\"Email Address\"\r\n                        disabled={true}\r\n                      />\r\n                    </FormControl>\r\n                  </Grid>\r\n                  <Grid item xs={12} md={6}>\r\n                    <FormControl fullWidth>\r\n                      <InputLabel htmlFor=\"email\">Email Address</InputLabel>\r\n                      <OutlinedInput\r\n                        id=\"email\"\r\n                        type=\"email\"\r\n                        inputRef={Enteredemail}\r\n                        label=\"Email Address\"\r\n                        sx={{ background: \"white\" }}\r\n                      />\r\n                    </FormControl>\r\n                  </Grid>\r\n                  <Grid item xs={12} md={6}>\r\n                    <FormControl fullWidth>\r\n                      <InputLabel htmlFor=\"subject\">Subject</InputLabel>\r\n                      <OutlinedInput\r\n                        id=\"subject\"\r\n                        type=\"text\"\r\n                        inputRef={Enteredsubject}\r\n                        label=\"Subject\"\r\n                        sx={{ background: \"white\" }}\r\n                      />\r\n                    </FormControl>\r\n                  </Grid>\r\n                  <Grid item xs={12}>\r\n                    <InputLabel htmlFor=\"message\">Message</InputLabel>\r\n                    <FormControl fullWidth>\r\n                      <TextareaAutosize\r\n                        id=\"message\"\r\n                        rows={5}\r\n                        minRows={3}\r\n                        // placeholder=\"Enter message\"\r\n                        ref={Enteredtext}\r\n                      />\r\n                    </FormControl>\r\n                  </Grid>\r\n                  <Grid item xs={12}>\r\n                    <Editor\r\n                      // editorState={editorState}\r\n                      toolbarClassName=\"toolbarClassName\"\r\n                      wrapperClassName=\"wrapperClassName\"\r\n                      editorClassName=\"editorClassName\"\r\n                      // onEditorStateChange={updateTextDescription}\r\n                    />\r\n                  </Grid>\r\n                  <Box mt={3} ml={3} display=\"flex\" justifyContent=\"flex-end\">\r\n                    <Button variant=\"contained\" color=\"primary\" type=\"submit\">\r\n                      Send\r\n                    </Button>\r\n                  </Box>\r\n                  <Box\r\n                    mt={3}\r\n                    ml={3}\r\n                    display=\"flex\"\r\n                    justifyContent=\"flex-end\"\r\n                    onClick={DraftHandler}\r\n                  >\r\n                    <Button variant=\"contained\" color=\"primary\" type=\"submit\">\r\n                      Save\r\n                    </Button>\r\n                  </Box>\r\n                </Grid>\r\n              </form>\r\n            </Box>\r\n          </Card>\r\n        </Box>\r\n      </Container>\r\n    </React.Fragment>\r\n  );\r\n};\r\nexport default TextEditing;\r\n","C:\\Users\\Admin\\Desktop\\Mail-Box-Clients\\MailBox -Client\\src\\Store\\MailSlice.js",["124"],"import { createSlice } from \"@reduxjs/toolkit\";\r\n\r\nconst initialval = {\r\n  // sendMail: false,\r\n  // getMail: false,\r\n  items: [],\r\n  count: 0,\r\n  unread: 0,\r\n  messageView: {},\r\n  sentItem: [],\r\n};\r\n\r\nconst MailSlice = createSlice({\r\n  name: \"mail\",\r\n  initialState: initialval,\r\n  reducers: {\r\n    setSentData(state, action) {\r\n      state.sendMail = !state.sendMail;\r\n      state.count++;\r\n    },\r\n\r\n    addItem(state, action) {\r\n      state.items = action.payload;\r\n\r\n      let Unreadmessage = 0;\r\n      state.items.map((item) => {\r\n        if (!item.readreceipt === true) {\r\n          Unreadmessage++;\r\n        }\r\n        return;\r\n      });\r\n      state.unread = Unreadmessage;\r\n    },\r\n    updataItems(state, action) {\r\n      state.count++;\r\n    },\r\n    DeleteItem(state, action) {\r\n      state.count++;\r\n    },\r\n    addMessageViewinfo(state, action) {\r\n      state.messageView = action.payload;\r\n    },\r\n  },\r\n});\r\nexport const MailSliceAction = MailSlice.actions;\r\nexport default MailSlice;\r\n","C:\\Users\\Admin\\Desktop\\Mail-Box-Clients\\MailBox -Client\\src\\Store\\Mail-thunk.js",["125","126","127","128","129"],"import { MailSliceAction } from \"./MailSlice\";\r\nimport { MymailSliceAction } from \"./MymailSlice\";\r\n\r\n//sending mail\r\nexport const sendMailHandler = (mailobj, token) => {\r\n  return async (Disptach) => {\r\n    const sendingmail = async () => {\r\n      const response = await fetch(`http://3.94.210.5:3000/user/sendmail`, {\r\n        method: \"POST\",\r\n        body: JSON.stringify(mailobj),\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n          Authorization: token,\r\n        },\r\n      });\r\n      const data = await response.json();\r\n      if (data.error) {\r\n        throw new Error(\"faild\");\r\n      }\r\n      //   console.log(data);\r\n      return data;\r\n    };\r\n    try {\r\n      await sendingmail();\r\n\r\n      Disptach(MailSliceAction.setSentData());\r\n      //   console.log(data);\r\n    } catch (error) {\r\n      console.log(error.message);\r\n    }\r\n  };\r\n};\r\n\r\n//get all mail\r\nexport const getmailHandler = (token) => {\r\n  return async (Disptach) => {\r\n    const gettingMailList = async () => {\r\n      const response = await fetch(`http://3.94.210.5:3000/user/getmail`, {\r\n        method: \"GET\",\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n          Authorization: token,\r\n        },\r\n      });\r\n      const data = await response.json();\r\n\r\n      if (data.error) {\r\n        console.log(data);\r\n        throw new Error(\"faild\");\r\n      }\r\n\r\n      return data;\r\n    };\r\n    try {\r\n      const data = await gettingMailList();\r\n      console.log(\"data\", data);\r\n      const inbox = data.inbox;\r\n      let sentItems = data.sentItems;\r\n      if (inbox.length > 0) Disptach(MailSliceAction.addItem(inbox));\r\n      // Disptach(MymailSliceAction.AddSenditemList(sentItem));\r\n      if (sentItems.length > 0) {\r\n        Disptach(MymailSliceAction.AddSenditemList(sentItems));\r\n      }\r\n    } catch (error) {\r\n      // console.log(\"error message\");\r\n      // console.log(data);\r\n    }\r\n  };\r\n};\r\n\r\n//Read readreceipt update\r\nexport const UpdateList = (id, token) => {\r\n  return async (Dispatch) => {\r\n    // let emailId = localStorage.getItem(\"mailid\").replace(/[&@.]/g, \"\");\r\n\r\n    const UpdateEmailList = async () => {\r\n      const response = await fetch(`http://3.94.210.5:3000/user/update`, {\r\n        method: \"PUT\",\r\n        body: JSON.stringify({\r\n          id: id,\r\n        }),\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n          Authorization: token,\r\n        },\r\n      });\r\n      const data = await response.json();\r\n      if (data.error) {\r\n        throw new Error(\"faild\");\r\n      }\r\n      return data;\r\n    };\r\n    try {\r\n      const data = await UpdateEmailList();\r\n      // console.log(data);\r\n      Dispatch(MailSliceAction.updataItems());\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  };\r\n};\r\n//inbox mail delete\r\nexport const DeleteMail = (id, token) => {\r\n  return async (Dispatch) => {\r\n    // let emailId = localStorage.getItem(\"mailid\").replace(/[&@.]/g, \"\");\r\n\r\n    const DeletingMail = async () => {\r\n      const response = await fetch(`http://3.94.210.5:3000/user/inbox`, {\r\n        method: \"DELETE\",\r\n        body: JSON.stringify({ id: id }),\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n          Authorization: token,\r\n        },\r\n      });\r\n      const data = await response.json();\r\n      if (data.error) {\r\n        console.log(data);\r\n        // throw new Error(\"faild\");\r\n      }\r\n      return data;\r\n    };\r\n    try {\r\n      const data = await DeletingMail();\r\n      // console.log(data);\r\n      Dispatch(MailSliceAction.DeleteItem());\r\n    } catch (error) {\r\n      console.log(error);\r\n      // Dispatch(MailSliceAction.DeleteItem());\r\n    }\r\n  };\r\n};\r\n\r\nexport const DeltesentItem = (id, token) => {\r\n  return async (Dispatch) => {\r\n    const DeleteItem = async () => {\r\n      const response = await fetch(`http://3.94.210.5:3000/user/sentmail`, {\r\n        method: \"DELETE\",\r\n        body: JSON.stringify({ id: id }),\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n          Authorization: token,\r\n        },\r\n      });\r\n      const data = await response.json();\r\n      if (data.error) {\r\n        throw new Error(\"faild\");\r\n      }\r\n      return data;\r\n    };\r\n    try {\r\n      const data = await DeleteItem();\r\n      // console.log(data);\r\n      Dispatch(MailSliceAction.DeleteItem());\r\n      // Dispatch(MymailSliceAction.sendItemUpdateTrigge());\r\n    } catch (error) {\r\n      // console.log(error);\r\n    }\r\n  };\r\n};\r\n\r\nexport const PostDraft = (Obj, token) => {\r\n  return async (Dispatch) => {\r\n    const PostDaftMail = async () => {\r\n      const response = await fetch(`http://3.94.210.5:3000/user/draft`, {\r\n        method: \"POST\",\r\n        body: JSON.stringify(Obj),\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n          Authorization: token,\r\n        },\r\n      });\r\n      const data = await response.json();\r\n      if (data.error) {\r\n        throw new Error(\"faild\");\r\n      }\r\n      return data;\r\n    };\r\n    try {\r\n      const data = await PostDaftMail();\r\n      // console.log(data);\r\n\r\n      Dispatch(MymailSliceAction.callgetDraft());\r\n    } catch (error) {\r\n      // console.log(error);\r\n    }\r\n  };\r\n};\r\n\r\nexport const getDraft = (token) => {\r\n  return async (Dispatch) => {\r\n    const PostDaftMail = async () => {\r\n      const response = await fetch(`http://3.94.210.5:3000/user/getdraft`, {\r\n        method: \"GET\",\r\n\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n          Authorization: token,\r\n        },\r\n      });\r\n      const data = await response.json();\r\n      if (data.error) {\r\n        throw new Error(\"faild\");\r\n      }\r\n      return data;\r\n    };\r\n    try {\r\n      const items = await PostDaftMail();\r\n      const transformeddata = [];\r\n\r\n      for (const key in items) {\r\n        const Obj = {\r\n          id: key,\r\n          ...items[key],\r\n        };\r\n        transformeddata.push(Obj);\r\n      }\r\n      // console.log(\"draftdata\", transformeddata);\r\n      Dispatch(MymailSliceAction.SetDraftDate(transformeddata));\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  };\r\n};\r\n\r\nexport const DeleteDraft = (id, token) => {\r\n  return async (Dispatch) => {\r\n    const PostDaftMail = async () => {\r\n      const response = await fetch(`http://3.94.210.5:3000/user/deletedraft`, {\r\n        method: \"DELETE\",\r\n        body: JSON.stringify({ id: id }),\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n          Authorization: token,\r\n        },\r\n      });\r\n      const data = await response.json();\r\n      if (data.error) {\r\n        throw new Error(\"faild\");\r\n      }\r\n      return data;\r\n    };\r\n    try {\r\n      const data = await PostDaftMail();\r\n      // console.log(data);\r\n      Dispatch(MymailSliceAction.callgetDraft());\r\n    } catch (error) {\r\n      // console.log(error);\r\n    }\r\n  };\r\n};\r\n","C:\\Users\\Admin\\Desktop\\Mail-Box-Clients\\MailBox -Client\\src\\Component\\InboxPage.js\\InboxPage.js",["130","131"],"import React from \"react\";\r\nimport \"./Inbox.css\";\r\n\r\nimport { Outlet } from \"react-router-dom\";\r\nimport InboxNavbar from \"./InboxNavbar\";\r\nimport { getDraft, getmailHandler } from \"../../Store/Mail-thunk\";\r\nimport { useEffect } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport MessageView from \"./MessageView\";\r\nimport { Link, Route, Routes } from \"react-router-dom\";\r\nimport SentMessageView from \"./Sentmessage/sentMessageView\";\r\nimport { MailOutline, Send } from \"@mui/icons-material\";\r\nimport { Create, Drafts } from \"@mui/icons-material\";\r\nimport { Grid, List, Badge, IconButton, ListItem } from \"@mui/material\";\r\n\r\nimport DraftMessageView from \"./DrfatMail/draftMessageView\";\r\n\r\nconst InboxPage = () => {\r\n  const count = useSelector((state) => state.mail.count);\r\n  const unread = useSelector((state) => state.mail.unread);\r\n  const Disptach = useDispatch();\r\n\r\n  useEffect(() => {\r\n    let token = localStorage.getItem(\"id\");\r\n    Disptach(getmailHandler(token));\r\n    Disptach(getDraft(token));\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    let token = localStorage.getItem(\"id\");\r\n    if (count > 0) {\r\n      Disptach(getmailHandler(token));\r\n    }\r\n  }, [count]);\r\n\r\n  // useEffect(() => {\r\n  //   const intervelid = setInterval(() => {\r\n  //     // console.log(\"setintervelid\", intervelid);\r\n  //     Disptach(getmailHandler(token));\r\n  //   }, 2000);\r\n\r\n  //   return () => {\r\n  //     // console.log(\"clearintervelid\", intervelid);\r\n  //     clearInterval(intervelid);\r\n  //   };\r\n  // });\r\n\r\n  const sendmailcartHandler = () => {\r\n    Disptach(getmailHandler());\r\n  };\r\n  const listItems = [\r\n    {\r\n      to: \"text-edit\",\r\n      label: \"Compose\",\r\n      icon: <Create />,\r\n    },\r\n    {\r\n      to: \"inboxlist\",\r\n      label: \"Inbox\",\r\n      icon:\r\n        unread > 0 ? (\r\n          <Badge badgeContent={unread} color=\"error\">\r\n            <MailOutline />\r\n          </Badge>\r\n        ) : (\r\n          <MailOutline />\r\n        ),\r\n    },\r\n    {\r\n      to: \"sentmessage\",\r\n      label: \"SentMail\",\r\n      icon: <Send />,\r\n    },\r\n    {\r\n      to: \"draft-mail\",\r\n      label: \"Draft\",\r\n      icon: <Drafts />,\r\n    },\r\n  ];\r\n  const liststyle = {\r\n    color: \"white\",\r\n    \"&:hover\": {\r\n      backgroundColor: \"gold\",\r\n    },\r\n  };\r\n  return (\r\n    <>\r\n      <InboxNavbar></InboxNavbar>\r\n\r\n      <Grid container style={{ height: \"650px\" }}>\r\n        {/* <Box > */}\r\n        <Grid\r\n          item\r\n          xs={2}\r\n          bgcolor=\" #007bff\"\r\n          sx={{ display: { xs: \"none\", md: \"block\" } }}\r\n        >\r\n          <List component=\"nav\">\r\n            {listItems.map((item, index) => (\r\n              <Link key={index} to={item.to} style={{ textDecoration: \"none\" }}>\r\n                <ListItem\r\n                  button\r\n                  onClick={\r\n                    item.label === \"SentMail\" ? sendmailcartHandler : null\r\n                  }\r\n                  sx={liststyle}\r\n                >\r\n                  {item.label}\r\n                  <IconButton\r\n                    size=\"large\"\r\n                    aria-label={`show ${index} new notifications`}\r\n                    color=\"inherit\"\r\n                    style={{ marginLeft: \"auto\" }}\r\n                  >\r\n                    {item.icon}\r\n                  </IconButton>\r\n                </ListItem>\r\n              </Link>\r\n            ))}\r\n          </List>\r\n        </Grid>\r\n\r\n        <Grid item xs={12} sm={12} md={10}>\r\n          <Routes>\r\n            <Route path=\"/inboxlist/mailview\" element={<MessageView />} />\r\n          </Routes>\r\n          <Routes>\r\n            <Route\r\n              path=\"/sentmessage/sentmailview\"\r\n              element={<SentMessageView />}\r\n            />\r\n          </Routes>\r\n          <Routes>\r\n            <Route\r\n              path=\"/draft-mail/draftmail-view\"\r\n              element={<DraftMessageView />}\r\n            />\r\n          </Routes>\r\n\r\n          <Outlet />\r\n        </Grid>\r\n      </Grid>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default InboxPage;\r\n","C:\\Users\\Admin\\Desktop\\Mail-Box-Clients\\MailBox -Client\\src\\Component\\InboxPage.js\\InboxList.js",[],"C:\\Users\\Admin\\Desktop\\Mail-Box-Clients\\MailBox -Client\\src\\Component\\InboxPage.js\\InboxNavbar.js",["132","133","134","135","136","137"],"import React, { useState, useEffect } from \"react\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport { AuthsliceAction } from \"../../Store/Auth\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { styled, alpha } from \"@mui/material/styles\";\r\nimport AppBar from \"@mui/material/AppBar\";\r\nimport Box from \"@mui/material/Box\";\r\nimport Toolbar from \"@mui/material/Toolbar\";\r\nimport IconButton from \"@mui/material/IconButton\";\r\nimport Typography from \"@mui/material/Typography\";\r\nimport InputBase from \"@mui/material/InputBase\";\r\nimport Badge from \"@mui/material/Badge\";\r\nimport MenuItem from \"@mui/material/MenuItem\";\r\nimport Menu from \"@mui/material/Menu\";\r\nimport MenuIcon from \"@mui/icons-material/Menu\";\r\nimport SearchIcon from \"@mui/icons-material/Search\";\r\nimport AccountCircle from \"@mui/icons-material/AccountCircle\";\r\nimport MailIcon from \"@mui/icons-material/Mail\";\r\nimport NotificationsIcon from \"@mui/icons-material/Notifications\";\r\nimport MoreIcon from \"@mui/icons-material/MoreVert\";\r\nimport LogoutIcon from \"@mui/icons-material/ExitToApp\";\r\nimport \"./Inbox.css\";\r\nimport { Avatar, Button, Link } from \"@mui/material\";\r\n// import { ToggleButton } from \"react-bootstrap\";\r\nimport ToggleButtonElement from \"./ToggleMenuButton\";\r\nconst Search = styled(\"div\")(({ theme }) => ({\r\n  position: \"relative\",\r\n  borderRadius: theme.shape.borderRadius,\r\n  backgroundColor: alpha(theme.palette.common.white, 0.15),\r\n  \"&:hover\": {\r\n    backgroundColor: alpha(theme.palette.common.white, 0.25),\r\n  },\r\n  marginRight: theme.spacing(2),\r\n  marginLeft: 0,\r\n  width: \"50%\",\r\n  [theme.breakpoints.up(\"sm\")]: {\r\n    marginLeft: theme.spacing(3),\r\n    width: \"50%\",\r\n  },\r\n}));\r\n\r\nconst SearchIconWrapper = styled(\"div\")(({ theme }) => ({\r\n  padding: theme.spacing(0, 2),\r\n  height: \"100%\",\r\n  position: \"absolute\",\r\n  pointerEvents: \"none\",\r\n  display: \"flex\",\r\n  alignItems: \"center\",\r\n  justifyContent: \"center\",\r\n}));\r\n\r\nconst StyledInputBase = styled(InputBase)(({ theme }) => ({\r\n  color: \"inherit\",\r\n  \"& .MuiInputBase-input\": {\r\n    padding: theme.spacing(1, 1, 1, 0),\r\n    // vertical padding + font size from searchIcon\r\n    paddingLeft: `calc(1em + ${theme.spacing(4)})`,\r\n    transition: theme.transitions.create(\"width\"),\r\n    width: \"100%\",\r\n    [theme.breakpoints.up(\"md\")]: {\r\n      width: \"20ch\",\r\n    },\r\n  },\r\n}));\r\n\r\nexport default function InboxNavbar() {\r\n  const [anchorEl, setAnchorEl] = useState(null);\r\n  const [mobileMoreAnchorEl, setMobileMoreAnchorEl] = useState(null);\r\n  const [state, setState] = React.useState({\r\n    left: false,\r\n  });\r\n\r\n  const unread = useSelector((state) => state.mail.unread);\r\n  const navigate = useNavigate();\r\n  const Dispatch = useDispatch();\r\n  let usermail = localStorage.getItem(\"mailid\").replace(/@gmail.com/g, \"\");\r\n  const logoutHandler = () => {\r\n    localStorage.clear();\r\n    Dispatch(AuthsliceAction.Login());\r\n    // navigate(\"/login\");\r\n  };\r\n\r\n  const isMenuOpen = Boolean(anchorEl);\r\n  const isMobileMenuOpen = Boolean(mobileMoreAnchorEl);\r\n\r\n  const handleProfileMenuOpen = (event) => {\r\n    setAnchorEl(event.currentTarget);\r\n  };\r\n\r\n  const handleMobileMenuClose = () => {\r\n    setMobileMoreAnchorEl(null);\r\n  };\r\n\r\n  const handleMenuClose = () => {\r\n    setAnchorEl(null);\r\n\r\n    handleMobileMenuClose();\r\n  };\r\n\r\n  const handleMobileMenuOpen = (event) => {\r\n    setMobileMoreAnchorEl(event.currentTarget);\r\n  };\r\n\r\n  const menuId = \"primary-search-account-menu\";\r\n  const renderMenu = (\r\n    <Menu\r\n      anchorEl={anchorEl}\r\n      anchorOrigin={{\r\n        vertical: \"top\",\r\n        horizontal: \"right\",\r\n      }}\r\n      id={menuId}\r\n      keepMounted\r\n      transformOrigin={{\r\n        vertical: \"top\",\r\n        horizontal: \"right\",\r\n      }}\r\n      open={isMenuOpen}\r\n      onClose={handleMenuClose}\r\n    >\r\n      <MenuItem onClick={handleMenuClose}>\r\n        <span onClick={() => navigate(\"/main/profile\")}>Profile</span>\r\n      </MenuItem>\r\n      <MenuItem onClick={handleMenuClose}>My account</MenuItem>\r\n    </Menu>\r\n  );\r\n\r\n  const mobileMenuId = \"primary-search-account-menu-mobile\";\r\n  const renderMobileMenu = (\r\n    <Menu\r\n      anchorEl={mobileMoreAnchorEl}\r\n      anchorOrigin={{\r\n        vertical: \"top\",\r\n        horizontal: \"right\",\r\n      }}\r\n      id={mobileMenuId}\r\n      keepMounted\r\n      transformOrigin={{\r\n        vertical: \"top\",\r\n        horizontal: \"right\",\r\n      }}\r\n      open={isMobileMenuOpen}\r\n      onClose={handleMobileMenuClose}\r\n    >\r\n      <MenuItem onClick={() => navigate(\"/main/inboxlist\")}>\r\n        <IconButton size=\"large\" aria-label=\"show 4 new mails\" color=\"inherit\">\r\n          <Badge badgeContent={unread} color=\"error\">\r\n            <MailIcon />\r\n          </Badge>\r\n        </IconButton>\r\n\r\n        <p>Messages</p>\r\n      </MenuItem>\r\n      <MenuItem>\r\n        <IconButton\r\n          size=\"large\"\r\n          aria-label=\"show 17 new notifications\"\r\n          color=\"inherit\"\r\n        >\r\n          <Badge badgeContent={unread} color=\"error\">\r\n            <NotificationsIcon />\r\n          </Badge>\r\n        </IconButton>\r\n        <p>Notifications</p>\r\n      </MenuItem>\r\n      <MenuItem onClick={() => navigate(\"/main/profile\")}>\r\n        <IconButton\r\n          size=\"large\"\r\n          aria-label=\"account of current user\"\r\n          aria-controls=\"primary-search-account-menu\"\r\n          aria-haspopup=\"true\"\r\n          color=\"inherit\"\r\n        >\r\n          <AccountCircle />\r\n        </IconButton>\r\n        <p>Profile</p>\r\n      </MenuItem>\r\n      <MenuItem onClick={logoutHandler}>\r\n        <IconButton\r\n          size=\"large\"\r\n          aria-label=\"account of current user\"\r\n          aria-controls=\"primary-search-account-menu\"\r\n          aria-haspopup=\"true\"\r\n          color=\"inherit\"\r\n        >\r\n          <LogoutIcon></LogoutIcon>\r\n        </IconButton>\r\n\r\n        <p>Logout</p>\r\n      </MenuItem>\r\n    </Menu>\r\n  );\r\n\r\n  return (\r\n    <Box sx={{ flexGrow: 1 }}>\r\n      <AppBar position=\"static\">\r\n        <Toolbar>\r\n          <ToggleButtonElement></ToggleButtonElement>\r\n\r\n          <Typography\r\n            variant=\"div\"\r\n            noWrap\r\n            component=\"div\"\r\n            sx={{ display: { xs: \"none\", sm: \"block\" } }}\r\n          >\r\n            <span className=\"G\">G</span>\r\n            <span className=\"mail\">mail</span>\r\n          </Typography>\r\n\r\n          <Search>\r\n            <SearchIconWrapper>\r\n              <SearchIcon />\r\n            </SearchIconWrapper>\r\n            <StyledInputBase\r\n              placeholder=\"Search…\"\r\n              inputProps={{ \"aria-label\": \"search\" }}\r\n            />\r\n          </Search>\r\n          <Box sx={{ flexGrow: 2 }} />\r\n          <Box sx={{ display: { xs: \"none\", md: \"flex\" } }}>\r\n            <IconButton\r\n              size=\"large\"\r\n              aria-label=\"show 4 new mails\"\r\n              color=\"inherit\"\r\n              onClick={() => navigate(\"/main/inboxlist\")}\r\n            >\r\n              <Badge badgeContent={unread} color=\"error\">\r\n                <MailIcon />\r\n              </Badge>\r\n            </IconButton>\r\n\r\n            <IconButton\r\n              size=\"large\"\r\n              aria-label=\"show 17 new notifications\"\r\n              color=\"inherit\"\r\n            >\r\n              <Badge badgeContent={unread} color=\"error\">\r\n                <NotificationsIcon />\r\n              </Badge>\r\n            </IconButton>\r\n            <IconButton\r\n              size=\"large\"\r\n              edge=\"end\"\r\n              aria-label=\"account of current user\"\r\n              aria-controls={menuId}\r\n              aria-haspopup=\"true\"\r\n              onClick={handleProfileMenuOpen}\r\n              color=\"inherit\"\r\n            >\r\n              <Avatar\r\n                alt=\"Cindy Baker\"\r\n                src=\"https://c.stocksy.com/a/IpI600/z9/1502340.jpg\"\r\n              />\r\n            </IconButton>\r\n          </Box>\r\n          <Box sx={{ display: { xs: \"flex\", sm: \"flex\", md: \"none\" } }}>\r\n            <IconButton\r\n              size=\"large\"\r\n              aria-label=\"show more\"\r\n              aria-controls={mobileMenuId}\r\n              aria-haspopup=\"true\"\r\n              onClick={handleMobileMenuOpen}\r\n              color=\"inherit\"\r\n            >\r\n              <MoreIcon />\r\n            </IconButton>\r\n          </Box>\r\n          <Box\r\n            sx={{ display: { xs: \"none\", md: \"flex\" } }}\r\n            onClick={logoutHandler}\r\n          >\r\n            <IconButton\r\n              size=\"large\"\r\n              aria-label=\"show more\"\r\n              aria-controls={mobileMenuId}\r\n              aria-haspopup=\"true\"\r\n              color=\"inherit\"\r\n            >\r\n              <Button variant=\"primary\">\r\n                Logout\r\n                <LogoutIcon />\r\n              </Button>\r\n            </IconButton>\r\n          </Box>\r\n        </Toolbar>\r\n      </AppBar>\r\n      {renderMobileMenu}\r\n      {renderMenu}\r\n    </Box>\r\n  );\r\n}\r\n","C:\\Users\\Admin\\Desktop\\Mail-Box-Clients\\MailBox -Client\\src\\Component\\InboxPage.js\\InboxListItem.js",[],"C:\\Users\\Admin\\Desktop\\Mail-Box-Clients\\MailBox -Client\\src\\Component\\InboxPage.js\\MessageView.js",[],"C:\\Users\\Admin\\Desktop\\Mail-Box-Clients\\MailBox -Client\\src\\Component\\InboxPage.js\\Sentmessage\\SentMessage.js",["138","139","140"],"import React, { useEffect } from \"react\";\r\nimport { ListGroup } from \"react-bootstrap\";\r\nimport SentMessageListItem from \"./SendmessageItem\";\r\nimport { List } from \"@mui/material\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\n// import { getmailHandler } from \"../../../Store/Mail-thunk\";\r\nconst SentMessage = () => {\r\n  const sentItem = useSelector((state) => state.mymail.sentItem);\r\n  // console.log(sentItem);\r\n  // const Disptach = useDispatch();\r\n  // useEffect(() => {\r\n  //   Disptach(getmailHandler());\r\n  // }, []);\r\n  return (\r\n    <>\r\n      <List>\r\n        {sentItem.map((item) => (\r\n          <SentMessageListItem\r\n            key={item.id}\r\n            To={item.To}\r\n            subject={item.subject}\r\n            text={item.text}\r\n            id={item.id}\r\n            createdAt={item.createdAt}\r\n          ></SentMessageListItem>\r\n        ))}\r\n      </List>\r\n    </>\r\n  );\r\n};\r\nexport default SentMessage;\r\n","C:\\Users\\Admin\\Desktop\\Mail-Box-Clients\\MailBox -Client\\src\\Component\\InboxPage.js\\Sentmessage\\SendmessageItem.js",["141","142"],"import React from \"react\";\r\n// import { Col, Container, ListGroup, Row } from \"react-bootstrap\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\n// import Button from \"react-bootstrap/Button\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { MymailSliceAction } from \"../../../Store/MymailSlice\";\r\nimport DeleteIcon from \"@mui/icons-material/Delete\";\r\nimport {\r\n  ListItem,\r\n  ListItemText,\r\n  ListItemSecondaryAction,\r\n  IconButton,\r\n  Box,\r\n  Button,\r\n} from \"@mui/material\";\r\nimport { DeltesentItem } from \"../../../Store/Mail-thunk\";\r\nconst SentMessageListItem = (props) => {\r\n  const sentItems = useSelector((state) => state.mymail.sentItem);\r\n  const Dispatch = useDispatch();\r\n\r\n  let Readreceipt;\r\n  if (!props.readreceipt) {\r\n    Readreceipt = \"readreceipt\";\r\n  }\r\n  const ListItemHandler = () => {\r\n    // console.log(\"sendmeeage page\", props);\r\n    Dispatch(MymailSliceAction.addMessageViewinfo(props));\r\n  };\r\n  const deleteHandler = (id) => {\r\n    let token = localStorage.getItem(\"id\");\r\n    Dispatch(DeltesentItem(id, token));\r\n    // console.log(\"delete\");\r\n    // let oldarry = sentItems;\r\n    // if (oldarry.length !== 1) {\r\n    //   let sentItem = oldarry.filter((item) => item.id !== props.id);\r\n    //   Dispatch(MymailSliceAction.updateSendItem(sentItem));\r\n    // } else {\r\n    //   Dispatch(MymailSliceAction.updateSendItem([]));\r\n    // }\r\n  };\r\n  const ExtractTime = (date) => {\r\n    const currentDate = new Date(date);\r\n    const dateString = currentDate.toDateString();\r\n    const timeString = currentDate.toLocaleTimeString();\r\n\r\n    const dateTimeString = dateString + \" \" + timeString;\r\n    return dateTimeString;\r\n  };\r\n  return (\r\n    <>\r\n      <ListItem\r\n        button\r\n        id={props.id}\r\n        className=\"m-.3 \"\r\n        key={props.id}\r\n        variant=\"success\"\r\n      >\r\n        {console.log(props)}\r\n        <Box\r\n          sx={{\r\n            width: \"100%\",\r\n            display: \"flex\",\r\n            alignItems: \"center\",\r\n            justifyContent: \"space-between\",\r\n            boxShadow: \"0px 2px 4px rgba(0, 0, 0, 0.1)\",\r\n            padding: \"10px\",\r\n            borderRadius: \"8px\",\r\n            background: \"rgb(211, 255, 206)\",\r\n          }}\r\n          onClick={ListItemHandler}\r\n        >\r\n          <ListItemText>\r\n            <Link to=\"sentmailview\">\r\n              To:{props.To}\r\n              <Box\r\n                sx={{\r\n                  fontSize: 10,\r\n                  display: \"flex\",\r\n                  textAlign: \"end\",\r\n                  width: \"100%\",\r\n                  flexDirection: \"column\",\r\n                }}\r\n              >\r\n                {ExtractTime(props.createdAt)}\r\n              </Box>\r\n            </Link>\r\n          </ListItemText>\r\n        </Box>\r\n\r\n        <Box sx={{ margin: 3 }}>\r\n          <ListItemSecondaryAction onClick={() => deleteHandler(props.id)}>\r\n            <IconButton edge=\"end\" aria-label=\"delete\">\r\n              <Button sx={{ marginLeft: \"20px\" }}>\r\n                <span>\r\n                  <DeleteIcon />\r\n                </span>\r\n              </Button>\r\n            </IconButton>\r\n          </ListItemSecondaryAction>\r\n        </Box>\r\n      </ListItem>\r\n    </>\r\n  );\r\n};\r\nexport default SentMessageListItem;\r\n","C:\\Users\\Admin\\Desktop\\Mail-Box-Clients\\MailBox -Client\\src\\Store\\MymailSlice.js",[],"C:\\Users\\Admin\\Desktop\\Mail-Box-Clients\\MailBox -Client\\src\\Component\\InboxPage.js\\Sentmessage\\sentMessageView.js",["143"],"import React from \"react\";\r\nimport { Button, Card } from \"react-bootstrap\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { useNavigate } from \"react-router-dom\";\r\n\r\nconst SentMessageView = (props) => {\r\n  const mymailmessageView = useSelector((state) => state.mymail.messageView);\r\n  const navigate = useNavigate();\r\n  // console.log(mymailmessageView, \" mymailmessageView\");\r\n  const replybuttonHandler = () => {\r\n    // navigate(\"/main/text-edit\");\r\n  };\r\n  return (\r\n    <React.Fragment>\r\n      <Card className=\"mt-3\">\r\n        <Card.Header>\r\n          <h3>{mymailmessageView.subject}</h3>\r\n        </Card.Header>\r\n        <Card.Body>\r\n          <p className=\"mb-5\">{mymailmessageView.text}</p>\r\n        </Card.Body>\r\n        <Card.Footer>\r\n          <h6>{mymailmessageView.email}</h6>\r\n          <Button onClick={replybuttonHandler}>ReSend</Button>\r\n        </Card.Footer>\r\n      </Card>\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default SentMessageView;\r\n","C:\\Users\\Admin\\Desktop\\Mail-Box-Clients\\MailBox -Client\\src\\Component\\InboxPage.js\\ToggleMenuButton.js",["144"],"import * as React from \"react\";\r\nimport Box from \"@mui/material/Box\";\r\nimport SwipeableDrawer from \"@mui/material/SwipeableDrawer\";\r\nimport List from \"@mui/material/List\";\r\nimport ListItem from \"@mui/material/ListItem\";\r\nimport ListItemButton from \"@mui/material/ListItemButton\";\r\nimport ListItemIcon from \"@mui/material/ListItemIcon\";\r\nimport ListItemText from \"@mui/material/ListItemText\";\r\nimport MailIcon from \"@mui/icons-material/Mail\";\r\nimport { IconButton } from \"@mui/material\";\r\nimport MenuIcon from \"@mui/icons-material/Menu\";\r\nimport { MailOutline, Send } from \"@mui/icons-material\";\r\nimport { Create, Drafts } from \"@mui/icons-material\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nexport default function ToggleButtonElement() {\r\n  const [state, setState] = React.useState({\r\n    left: false,\r\n  });\r\n\r\n  const toggleDrawer = (anchor, open) => (event) => {\r\n    console.log(\"function invoke\");\r\n    if (\r\n      event &&\r\n      event.type === \"keydown\" &&\r\n      (event.key === \"Tab\" || event.key === \"Shift\")\r\n    ) {\r\n      return;\r\n    }\r\n\r\n    setState({ ...state, [anchor]: open });\r\n  };\r\n  const obj = [\r\n    { name: \"Compose\", icon: <Create />, path: \"/main/text-edit\" },\r\n    { name: \"Inbox\", icon: <MailOutline />, path: \"/main/inboxlist\" },\r\n    {\r\n      name: \"Sent Mail\",\r\n      icon: <MailIcon></MailIcon>,\r\n      path: \"/main/sentmessage\",\r\n    },\r\n    { name: \"Drafts\", icon: <Drafts />, path: \"/main/draft-mail\" },\r\n  ];\r\n  const list = (\r\n    <Box\r\n      sx={{\r\n        width: 250,\r\n        height: \"100%\",\r\n        backgroundColor: \" #007bff\",\r\n        position: \"fixed\",\r\n        color: \"inhert\",\r\n        // zIndex: 9999,\r\n      }}\r\n      role=\"presentation\"\r\n      onClick={toggleDrawer(\"left\", false)}\r\n      onKeyDown={toggleDrawer(\"left\", false)}\r\n    >\r\n      <List>\r\n        {obj.map(({ name, icon, path }) => (\r\n          <Link to={path} key={name} style={{ color: \"white\" }}>\r\n            <ListItem key={name} disablePadding>\r\n              <ListItemButton>\r\n                <ListItemIcon style={{ color: \"white\" }}>{icon}</ListItemIcon>\r\n                <ListItemText primary={name} />\r\n              </ListItemButton>\r\n            </ListItem>\r\n          </Link>\r\n        ))}\r\n      </List>\r\n    </Box>\r\n  );\r\n\r\n  return (\r\n    <>\r\n      <IconButton\r\n        size=\"large\"\r\n        // sx={{ mr: 2, color: \"white\" }}\r\n        onClick={toggleDrawer(\"left\", true)}\r\n        sx={{ display: { xs: \"block\", md: \"none\", mr: 2, color: \"white\" } }}\r\n      >\r\n        <MenuIcon />\r\n      </IconButton>\r\n\r\n      <SwipeableDrawer\r\n        anchor=\"left\"\r\n        open={state.left}\r\n        onClose={toggleDrawer(\"left\", false)}\r\n        onOpen={toggleDrawer(\"left\", true)}\r\n        ModalProps={{\r\n          keepMounted: true,\r\n          BackdropProps: {\r\n            invisible: true,\r\n          },\r\n        }}\r\n      >\r\n        {list}\r\n      </SwipeableDrawer>\r\n    </>\r\n  );\r\n}\r\n","C:\\Users\\Admin\\Desktop\\Mail-Box-Clients\\MailBox -Client\\src\\Component\\profile\\Profile.js",["145"],"import React from \"react\";\r\n\r\nimport profilecls from \"./profile.module.css\";\r\nimport sampath from \"../../Assets/sampath.png\";\r\nimport sampath1 from \"../../Assets/sampath1.png\";\r\nconst Profile = () => {\r\n  return (\r\n    <div className={profilecls.container}>\r\n      <section className={profilecls.main}>\r\n        <div className={profilecls.info}>\r\n          <h3>Details</h3>\r\n          <p></p>\r\n          <p>\r\n            <span>Name:</span> B.Sampath\r\n          </p>\r\n          <p>\r\n            <span>age:</span>32\r\n          </p>\r\n          <p>\r\n            <span>Education:</span>Diploma in Mchanical engineering\r\n          </p>\r\n          <p>\r\n            <span>place :</span>Bangalore\r\n          </p>\r\n          <p>\r\n            <span>Email:</span>bsampath11790@gmail.com{\" \"}\r\n          </p>\r\n          <p>\r\n            <span>phone:</span>6381991250\r\n          </p>\r\n\r\n          <div>\r\n            {/* //onClick=\"/update\" */}\r\n            <button>Update Profile</button>\r\n          </div>\r\n        </div>\r\n        <div className={profilecls.photo}>\r\n          {/* //photo */}\r\n          <img src={sampath1} alt=\"\"></img>\r\n          {/* <img\r\n            src=\"https://t4.ftcdn.net/jpg/03/64/21/11/360_F_364211147_1qgLVxv1Tcq0Ohz3FawUfrtONzz8nq3e.jpg\"\r\n            alt=\"\"\r\n          ></img> */}\r\n        </div>\r\n        <div className={profilecls.about}>\r\n          {/* about */}\r\n          <h3>About</h3>\r\n          <p>\r\n            I am proficient in full stack web development, with expertise in\r\n            HTML, CSS, React, JavaScript, and Material-UI for building intuitive\r\n            user interfaces. Additionally, I have experience working with\r\n            Node.js, Express, and databases like MySQL and MongoDB, along with\r\n            cloud platforms like AWS. My skills in these technologies enable me\r\n            to create robust and scalable web applications while ensuring a\r\n            seamless user experience.\r\n          </p>\r\n        </div>\r\n      </section>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Profile;\r\n","C:\\Users\\Admin\\Desktop\\Mail-Box-Clients\\MailBox -Client\\src\\Component\\InboxPage.js\\DrfatMail\\DraftItem.js",["146","147"],"import React from \"react\";\r\n\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\n\r\nimport { Link } from \"react-router-dom\";\r\n// import { MymailSliceAction } from \"../../../Store/MymailSlice\";\r\nimport DeleteIcon from \"@mui/icons-material/Delete\";\r\nimport {\r\n  ListItem,\r\n  ListItemText,\r\n  ListItemSecondaryAction,\r\n  IconButton,\r\n  Box,\r\n  Button,\r\n} from \"@mui/material\";\r\nimport { MymailSliceAction } from \"../../../Store/MymailSlice\";\r\nimport { DeleteDraft } from \"../../../Store/Mail-thunk\";\r\n// import { DeltesentItem } from \"../../../Store/Mail-thunk\";\r\nconst DraftItem = (props) => {\r\n  const sentItems = useSelector((state) => state.mymail.sentItem);\r\n  const Dispatch = useDispatch();\r\n\r\n  let Readreceipt;\r\n  if (!props.readreceipt) {\r\n    Readreceipt = \"readreceipt\";\r\n  }\r\n  const ListItemHandler = (props) => {\r\n    Dispatch(MymailSliceAction.Viewdarft(props));\r\n  };\r\n  const deleteHandler = (id) => {\r\n    let token = localStorage.getItem(\"id\");\r\n    Dispatch(DeleteDraft(id, token));\r\n  };\r\n  const ExtractTime = (date) => {\r\n    const currentDate = new Date(date);\r\n    const dateString = currentDate.toDateString();\r\n    const timeString = currentDate.toLocaleTimeString();\r\n\r\n    const dateTimeString = dateString + \" \" + timeString;\r\n    return dateTimeString;\r\n  };\r\n  return (\r\n    <>\r\n      <ListItem\r\n        button\r\n        id={props.id}\r\n        className=\"m-.3 \"\r\n        key={props.id}\r\n        variant=\"success\"\r\n      >\r\n        {/* {console.log(props)} */}\r\n        <Box\r\n          sx={{\r\n            width: \"100%\",\r\n            display: \"flex\",\r\n            alignItems: \"center\",\r\n            justifyContent: \"space-between\",\r\n            boxShadow: \"0px 2px 4px rgba(0, 0, 0, 0.1)\",\r\n            padding: \"10px\",\r\n            borderRadius: \"8px\",\r\n            background: \"rgb(252, 251, 167)\",\r\n          }}\r\n          onClick={() => ListItemHandler(props)}\r\n        >\r\n          <ListItemText>\r\n            <Link to=\"draftmail-view\">\r\n              To:{props.To}\r\n              <Box\r\n                sx={{\r\n                  fontSize: 10,\r\n                  display: \"flex\",\r\n                  textAlign: \"end\",\r\n                  width: \"100%\",\r\n                  flexDirection: \"column\",\r\n                }}\r\n              >\r\n                {ExtractTime(props.createdAt)}\r\n              </Box>\r\n            </Link>\r\n          </ListItemText>\r\n        </Box>\r\n\r\n        <Box sx={{ margin: 3 }}>\r\n          <ListItemSecondaryAction onClick={() => deleteHandler(props.id)}>\r\n            <IconButton edge=\"end\" aria-label=\"delete\">\r\n              <Button sx={{ marginLeft: \"20px\" }}>\r\n                <span>\r\n                  <DeleteIcon />\r\n                </span>\r\n              </Button>\r\n            </IconButton>\r\n          </ListItemSecondaryAction>\r\n        </Box>\r\n      </ListItem>\r\n    </>\r\n  );\r\n};\r\nexport default DraftItem;\r\n","C:\\Users\\Admin\\Desktop\\Mail-Box-Clients\\MailBox -Client\\src\\Component\\InboxPage.js\\DrfatMail\\Daftmessage.js",["148"],"import React, { useEffect } from \"react\";\r\n\r\nimport { List } from \"@mui/material\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport DraftItem from \"./DraftItem\";\r\nimport { getDraft } from \"../../../Store/Mail-thunk\";\r\n\r\nconst DraftMessage = () => {\r\n  const { Draft, calldraft } = useSelector((state) => state.mymail);\r\n  const Disptach = useDispatch();\r\n  useEffect(() => {\r\n    let token = localStorage.getItem(\"id\");\r\n    // console.log(\"calling\");\r\n    if (calldraft > 0) {\r\n      Disptach(getDraft(token));\r\n    }\r\n  }, [calldraft]);\r\n\r\n  return (\r\n    <>\r\n      <List>\r\n        {Draft.map((item) => (\r\n          <DraftItem\r\n            key={item.id}\r\n            To={item.To}\r\n            subject={item.subject}\r\n            text={item.text}\r\n            id={item.id}\r\n            createdAt={item.createdAt}\r\n          ></DraftItem>\r\n        ))}\r\n      </List>\r\n    </>\r\n  );\r\n};\r\nexport default DraftMessage;\r\n","C:\\Users\\Admin\\Desktop\\Mail-Box-Clients\\MailBox -Client\\src\\Component\\InboxPage.js\\DrfatMail\\draftMessageView.js",[],{"ruleId":"149","replacedBy":"150"},{"ruleId":"151","replacedBy":"152"},{"ruleId":"153","severity":1,"message":"154","line":4,"column":10,"nodeType":"155","messageId":"156","endLine":4,"endColumn":26},{"ruleId":"153","severity":1,"message":"157","line":28,"column":9,"nodeType":"155","messageId":"156","endLine":28,"endColumn":17},{"ruleId":"158","severity":1,"message":"159","line":37,"column":6,"nodeType":"160","endLine":37,"endColumn":23,"suggestions":"161"},{"ruleId":"153","severity":1,"message":"162","line":39,"column":9,"nodeType":"155","messageId":"156","endLine":39,"endColumn":17},{"ruleId":"153","severity":1,"message":"163","line":3,"column":17,"nodeType":"155","messageId":"156","endLine":3,"endColumn":26},{"ruleId":"153","severity":1,"message":"164","line":9,"column":3,"nodeType":"155","messageId":"156","endLine":9,"endColumn":24},{"ruleId":"153","severity":1,"message":"165","line":11,"column":3,"nodeType":"155","messageId":"156","endLine":11,"endColumn":18},{"ruleId":"166","severity":1,"message":"167","line":176,"column":15,"nodeType":"168","endLine":176,"endColumn":33},{"ruleId":"153","severity":1,"message":"169","line":7,"column":10,"nodeType":"155","messageId":"156","endLine":7,"endColumn":27},{"ruleId":"153","severity":1,"message":"170","line":27,"column":9,"nodeType":"155","messageId":"156","endLine":27,"endColumn":21},{"ruleId":"171","severity":1,"message":"172","line":30,"column":9,"nodeType":"173","messageId":"174","endLine":30,"endColumn":16},{"ruleId":"153","severity":1,"message":"175","line":94,"column":13,"nodeType":"155","messageId":"156","endLine":94,"endColumn":17},{"ruleId":"153","severity":1,"message":"175","line":124,"column":13,"nodeType":"155","messageId":"156","endLine":124,"endColumn":17},{"ruleId":"153","severity":1,"message":"175","line":152,"column":13,"nodeType":"155","messageId":"156","endLine":152,"endColumn":17},{"ruleId":"153","severity":1,"message":"175","line":180,"column":13,"nodeType":"155","messageId":"156","endLine":180,"endColumn":17},{"ruleId":"153","severity":1,"message":"175","line":244,"column":13,"nodeType":"155","messageId":"156","endLine":244,"endColumn":17},{"ruleId":"158","severity":1,"message":"176","line":27,"column":6,"nodeType":"160","endLine":27,"endColumn":8,"suggestions":"177"},{"ruleId":"158","severity":1,"message":"176","line":34,"column":6,"nodeType":"160","endLine":34,"endColumn":13,"suggestions":"178"},{"ruleId":"153","severity":1,"message":"163","line":1,"column":27,"nodeType":"155","messageId":"156","endLine":1,"endColumn":36},{"ruleId":"153","severity":1,"message":"179","line":15,"column":8,"nodeType":"155","messageId":"156","endLine":15,"endColumn":16},{"ruleId":"153","severity":1,"message":"180","line":23,"column":26,"nodeType":"155","messageId":"156","endLine":23,"endColumn":30},{"ruleId":"153","severity":1,"message":"181","line":69,"column":10,"nodeType":"155","messageId":"156","endLine":69,"endColumn":15},{"ruleId":"153","severity":1,"message":"182","line":69,"column":17,"nodeType":"155","messageId":"156","endLine":69,"endColumn":25},{"ruleId":"153","severity":1,"message":"183","line":76,"column":7,"nodeType":"155","messageId":"156","endLine":76,"endColumn":15},{"ruleId":"153","severity":1,"message":"163","line":1,"column":17,"nodeType":"155","messageId":"156","endLine":1,"endColumn":26},{"ruleId":"153","severity":1,"message":"184","line":2,"column":10,"nodeType":"155","messageId":"156","endLine":2,"endColumn":19},{"ruleId":"153","severity":1,"message":"185","line":5,"column":10,"nodeType":"155","messageId":"156","endLine":5,"endColumn":21},{"ruleId":"153","severity":1,"message":"186","line":18,"column":9,"nodeType":"155","messageId":"156","endLine":18,"endColumn":18},{"ruleId":"153","severity":1,"message":"187","line":23,"column":5,"nodeType":"155","messageId":"156","endLine":23,"endColumn":16},{"ruleId":"153","severity":1,"message":"188","line":8,"column":9,"nodeType":"155","messageId":"156","endLine":8,"endColumn":17},{"ruleId":"153","severity":1,"message":"189","line":12,"column":23,"nodeType":"155","messageId":"156","endLine":12,"endColumn":27},{"ruleId":"153","severity":1,"message":"190","line":4,"column":8,"nodeType":"155","messageId":"156","endLine":4,"endColumn":15},{"ruleId":"153","severity":1,"message":"186","line":20,"column":9,"nodeType":"155","messageId":"156","endLine":20,"endColumn":18},{"ruleId":"153","severity":1,"message":"187","line":25,"column":5,"nodeType":"155","messageId":"156","endLine":25,"endColumn":16},{"ruleId":"158","severity":1,"message":"176","line":17,"column":6,"nodeType":"160","endLine":17,"endColumn":17,"suggestions":"191"},"no-native-reassign",["192"],"no-negated-in-lhs",["193"],"no-unused-vars","'UpdateMySentItem' is defined but never used.","Identifier","unusedVar","'Dispatch' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'islogin' and 'navi'. Either include them or remove the dependency array.","ArrayExpression",["194"],"'sentItem' is assigned a value but never used.","'useEffect' is defined but never used.","'LocalActivityOutlined' is defined but never used.","'VpnLockOutlined' is defined but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'MymailSliceAction' is defined but never used.","'sentItemlist' is assigned a value but never used.","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ReturnStatement","expectedReturnValue","'data' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'Disptach'. Either include it or remove the dependency array.",["195"],["196"],"'MenuIcon' is defined but never used.","'Link' is defined but never used.","'state' is assigned a value but never used.","'setState' is assigned a value but never used.","'usermail' is assigned a value but never used.","'ListGroup' is defined but never used.","'useDispatch' is defined but never used.","'sentItems' is assigned a value but never used.","'Readreceipt' is assigned a value but never used.","'navigate' is assigned a value but never used.","'Send' is defined but never used.","'sampath' is defined but never used.",["197"],"no-global-assign","no-unsafe-negation",{"desc":"198","fix":"199"},{"desc":"200","fix":"201"},{"desc":"202","fix":"203"},{"desc":"204","fix":"205"},"Update the dependencies array to be: [islogin, loginlocalstore, navi]",{"range":"206","text":"207"},"Update the dependencies array to be: [Disptach]",{"range":"208","text":"209"},"Update the dependencies array to be: [Disptach, count]",{"range":"210","text":"211"},"Update the dependencies array to be: [Disptach, calldraft]",{"range":"212","text":"213"},[1309,1326],"[islogin, loginlocalstore, navi]",[1039,1041],"[Disptach]",[1187,1194],"[Disptach, count]",[541,552],"[Disptach, calldraft]"]