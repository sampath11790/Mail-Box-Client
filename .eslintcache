[{"C:\\Users\\Admin\\Desktop\\Mail-Box-Clients\\MailBox -Client\\src\\index.js":"1","C:\\Users\\Admin\\Desktop\\Mail-Box-Clients\\MailBox -Client\\src\\App.js":"2","C:\\Users\\Admin\\Desktop\\Mail-Box-Clients\\MailBox -Client\\src\\Store\\store.js":"3","C:\\Users\\Admin\\Desktop\\Mail-Box-Clients\\MailBox -Client\\src\\Store\\Auth.js":"4","C:\\Users\\Admin\\Desktop\\Mail-Box-Clients\\MailBox -Client\\src\\Store\\Uivisible.js":"5","C:\\Users\\Admin\\Desktop\\Mail-Box-Clients\\MailBox -Client\\src\\Component\\AuthForm\\AuthForm.js":"6","C:\\Users\\Admin\\Desktop\\Mail-Box-Clients\\MailBox -Client\\src\\Store\\Action-thunk.js":"7","C:\\Users\\Admin\\Desktop\\Mail-Box-Clients\\MailBox -Client\\src\\Component\\TextEditing\\TextEditing.js":"8","C:\\Users\\Admin\\Desktop\\Mail-Box-Clients\\MailBox -Client\\src\\Store\\MailSlice.js":"9","C:\\Users\\Admin\\Desktop\\Mail-Box-Clients\\MailBox -Client\\src\\Store\\Mail-thunk.js":"10","C:\\Users\\Admin\\Desktop\\Mail-Box-Clients\\MailBox -Client\\src\\Component\\InboxPage.js\\InboxPage.js":"11","C:\\Users\\Admin\\Desktop\\Mail-Box-Clients\\MailBox -Client\\src\\Component\\InboxPage.js\\InboxList.js":"12","C:\\Users\\Admin\\Desktop\\Mail-Box-Clients\\MailBox -Client\\src\\Component\\InboxPage.js\\InboxNavbar.js":"13","C:\\Users\\Admin\\Desktop\\Mail-Box-Clients\\MailBox -Client\\src\\Component\\InboxPage.js\\InboxListItem.js":"14","C:\\Users\\Admin\\Desktop\\Mail-Box-Clients\\MailBox -Client\\src\\Component\\InboxPage.js\\MessageView.js":"15","C:\\Users\\Admin\\Desktop\\Mail-Box-Clients\\MailBox -Client\\src\\Component\\InboxPage.js\\Sentmessage\\SentMessage.js":"16","C:\\Users\\Admin\\Desktop\\Mail-Box-Clients\\MailBox -Client\\src\\Component\\InboxPage.js\\Sentmessage\\SendmessageItem.js":"17","C:\\Users\\Admin\\Desktop\\Mail-Box-Clients\\MailBox -Client\\src\\Store\\MymailSlice.js":"18","C:\\Users\\Admin\\Desktop\\Mail-Box-Clients\\MailBox -Client\\src\\Component\\InboxPage.js\\Sentmessage\\sentMessageView.js":"19","C:\\Users\\Admin\\Desktop\\Mail-Box-Clients\\MailBox -Client\\src\\Component\\InboxPage.js\\ToggleMenuButton.js":"20"},{"size":502,"mtime":1684726368531,"results":"21","hashOfConfig":"22"},{"size":2196,"mtime":1684812504578,"results":"23","hashOfConfig":"22"},{"size":407,"mtime":1670039479314,"results":"24","hashOfConfig":"22"},{"size":424,"mtime":1670111614430,"results":"25","hashOfConfig":"22"},{"size":389,"mtime":1669890450315,"results":"26","hashOfConfig":"22"},{"size":3737,"mtime":1684819601584,"results":"27","hashOfConfig":"22"},{"size":2197,"mtime":1670112296264,"results":"28","hashOfConfig":"22"},{"size":5505,"mtime":1684813292516,"results":"29","hashOfConfig":"22"},{"size":1495,"mtime":1670119746332,"results":"30","hashOfConfig":"22"},{"size":5115,"mtime":1684813332858,"results":"31","hashOfConfig":"22"},{"size":4503,"mtime":1684815081815,"results":"32","hashOfConfig":"22"},{"size":667,"mtime":1684808353390,"results":"33","hashOfConfig":"22"},{"size":8988,"mtime":1684811491017,"results":"34","hashOfConfig":"22"},{"size":2248,"mtime":1684819104526,"results":"35","hashOfConfig":"22"},{"size":904,"mtime":1684737220136,"results":"36","hashOfConfig":"22"},{"size":947,"mtime":1684814404999,"results":"37","hashOfConfig":"22"},{"size":2383,"mtime":1684818981913,"results":"38","hashOfConfig":"22"},{"size":971,"mtime":1684813761052,"results":"39","hashOfConfig":"22"},{"size":968,"mtime":1684814507453,"results":"40","hashOfConfig":"22"},{"size":2894,"mtime":1684808587785,"results":"41","hashOfConfig":"22"},{"filePath":"42","messages":"43","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},"lj8f1e",{"filePath":"45","messages":"46","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"47","messages":"48","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"49","messages":"50","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"51","messages":"52","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"53","messages":"54","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"55","messages":"56","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"57","messages":"58","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"59","messages":"60","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"61","usedDeprecatedRules":"44"},{"filePath":"62","messages":"63","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"64","usedDeprecatedRules":"44"},{"filePath":"65","messages":"66","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"67","messages":"68","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"69","messages":"70","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"71","usedDeprecatedRules":"44"},{"filePath":"72","messages":"73","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"74","messages":"75","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"76","messages":"77","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"78","messages":"79","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"80","messages":"81","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"82","messages":"83","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"84","messages":"85","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\Users\\Admin\\Desktop\\Mail-Box-Clients\\MailBox -Client\\src\\index.js",[],["86","87"],"C:\\Users\\Admin\\Desktop\\Mail-Box-Clients\\MailBox -Client\\src\\App.js",["88","89"],"C:\\Users\\Admin\\Desktop\\Mail-Box-Clients\\MailBox -Client\\src\\Store\\store.js",[],"C:\\Users\\Admin\\Desktop\\Mail-Box-Clients\\MailBox -Client\\src\\Store\\Auth.js",[],"C:\\Users\\Admin\\Desktop\\Mail-Box-Clients\\MailBox -Client\\src\\Store\\Uivisible.js",[],"C:\\Users\\Admin\\Desktop\\Mail-Box-Clients\\MailBox -Client\\src\\Component\\AuthForm\\AuthForm.js",["90","91"],"C:\\Users\\Admin\\Desktop\\Mail-Box-Clients\\MailBox -Client\\src\\Store\\Action-thunk.js",[],"C:\\Users\\Admin\\Desktop\\Mail-Box-Clients\\MailBox -Client\\src\\Component\\TextEditing\\TextEditing.js",[],"C:\\Users\\Admin\\Desktop\\Mail-Box-Clients\\MailBox -Client\\src\\Store\\MailSlice.js",["92"],"import { createSlice } from \"@reduxjs/toolkit\";\r\n\r\nconst initialval = {\r\n  // sendMail: false,\r\n  // getMail: false,\r\n  items: [],\r\n  count: 0,\r\n  unread: 0,\r\n  messageView: {},\r\n  sentItem: [],\r\n};\r\n\r\nconst MailSlice = createSlice({\r\n  name: \"mail\",\r\n  initialState: initialval,\r\n  reducers: {\r\n    setSentData(state, action) {\r\n      state.sendMail = !state.sendMail;\r\n      state.count = state.count + 1;\r\n\r\n      console.log(\"success\");\r\n    },\r\n    // setGetMail(state, action) {\r\n    //   console.log(\"getmail\", state.unread);\r\n    // },\r\n    addItem(state, action) {\r\n      state.items = action.payload;\r\n\r\n      let Unreadmessage = 0;\r\n      state.items.map((item) => {\r\n        if (!item.readreceipt === true) {\r\n          Unreadmessage++;\r\n        }\r\n        return;\r\n      });\r\n      state.unread = Unreadmessage;\r\n      // console.log(state.unread);\r\n      // console.log(action.payload.transformeddata);\r\n    },\r\n    updataItems(state, action) {\r\n      state.count = state.count + 1;\r\n    },\r\n    DeleteItem(state, action) {\r\n      state.count = state.count + 1;\r\n      console.log(\"deleted\");\r\n    },\r\n    addMessageViewinfo(state, action) {\r\n      state.messageView = action.payload;\r\n      // console.log(\" addMessageViewinfo\", action.payload);\r\n    },\r\n    // RemovesentMail(state, action) {\r\n    //   // console.log(state.sentItem);\r\n    //   state.sentItem = action.payload;\r\n    // },\r\n  },\r\n});\r\nexport const MailSliceAction = MailSlice.actions;\r\nexport default MailSlice;\r\n","C:\\Users\\Admin\\Desktop\\Mail-Box-Clients\\MailBox -Client\\src\\Store\\Mail-thunk.js",["93"],"import { MailSliceAction } from \"./MailSlice\";\r\nimport { MymailSliceAction } from \"./MymailSlice\";\r\n\r\n//sending mail\r\nexport const sendMailHandler = (mailobj) => {\r\n  return async (Disptach) => {\r\n    let emailId = await mailobj.email.replace(/[&@.]/g, \"\");\r\n\r\n    const sendingmail = async () => {\r\n      const response = await fetch(\r\n        `https://mailbox-client-26e9b-default-rtdb.firebaseio.com/${emailId}/inbox.json`,\r\n        {\r\n          method: \"POST\",\r\n          body: JSON.stringify(mailobj),\r\n          headers: {\r\n            \"Content-Type\": \"application/json\",\r\n          },\r\n        }\r\n      );\r\n      const data = await response.json();\r\n      if (data.error) {\r\n        throw new Error(\"faild\");\r\n      }\r\n      //   console.log(data);\r\n      return data;\r\n    };\r\n    try {\r\n      await sendingmail();\r\n\r\n      // Disptach(MailSliceAction.setSentData());\r\n      //   console.log(data);\r\n    } catch (error) {\r\n      console.log(error.message);\r\n    }\r\n  };\r\n};\r\n\r\n//get all mail\r\nexport const getmailHandler = () => {\r\n  let emailId = localStorage.getItem(\"mailid\").replace(/[&@.]/g, \"\");\r\n  // console.log(emailId);\r\n  return async (Disptach) => {\r\n    const gettingMailList = async () => {\r\n      const response = await fetch(\r\n        `https://mailbox-client-26e9b-default-rtdb.firebaseio.com//${emailId}.json`,\r\n        {\r\n          method: \"GET\",\r\n        }\r\n      );\r\n      const data = await response.json();\r\n      // if (data.inbox) {\r\n      //   return data;\r\n      // }\r\n      // console.log(data.inbox);\r\n      if (data.error) {\r\n        console.log(data);\r\n        throw new Error(\"faild\");\r\n      }\r\n\r\n      return data;\r\n    };\r\n    try {\r\n      const data = await gettingMailList();\r\n      const items = data.inbox;\r\n      let sentItem = data.sentItem;\r\n      // console.log(\"sentItemin mail thunk getting data\", sentItem);\r\n      const transformeddata = [];\r\n\r\n      for (const key in items) {\r\n        const Obj = {\r\n          id: key,\r\n          ...items[key],\r\n        };\r\n        transformeddata.push(Obj);\r\n      }\r\n      Disptach(MailSliceAction.addItem(transformeddata));\r\n      if (sentItem) {\r\n        Disptach(MymailSliceAction.AddSenditemList(sentItem));\r\n      }\r\n    } catch (error) {\r\n      // console.log(\"error message\");\r\n      // console.log(data);\r\n    }\r\n  };\r\n};\r\n\r\n//Read readreceipt update\r\nexport const UpdateList = (obj) => {\r\n  return async (Dispatch) => {\r\n    let emailId = localStorage.getItem(\"mailid\").replace(/[&@.]/g, \"\");\r\n\r\n    const UpdateEmailList = async () => {\r\n      const response = await fetch(\r\n        `https://mailbox-client-26e9b-default-rtdb.firebaseio.com//${emailId}/inbox/${obj.id}.json`,\r\n        {\r\n          method: \"PUT\",\r\n          body: JSON.stringify({\r\n            email: obj.email,\r\n            subject: obj.subject,\r\n            text: obj.text,\r\n            From: obj.From,\r\n            readreceipt: true,\r\n          }),\r\n          headers: {\r\n            \"Content-Type\": \"application/json\",\r\n          },\r\n        }\r\n      );\r\n      const data = await response.json();\r\n      if (data.error) {\r\n        throw new Error(\"faild\");\r\n      }\r\n      return data;\r\n    };\r\n    try {\r\n      await UpdateEmailList();\r\n      Dispatch(MailSliceAction.updataItems());\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  };\r\n};\r\n//inbox mail delete\r\nexport const DeleteMail = (id) => {\r\n  return async (Dispatch) => {\r\n    let emailId = localStorage.getItem(\"mailid\").replace(/[&@.]/g, \"\");\r\n\r\n    const DeletingMail = async () => {\r\n      const response = await fetch(\r\n        `https://mailbox-client-26e9b-default-rtdb.firebaseio.com//${emailId}/inbox/${id}.json`,\r\n        {\r\n          method: \"DELETE\",\r\n          headers: {\r\n            \"Content-Type\": \"application/json\",\r\n          },\r\n        }\r\n      );\r\n      const data = await response.json();\r\n      if (data.error) {\r\n        console.log(data);\r\n        // throw new Error(\"faild\");\r\n      }\r\n      return data;\r\n    };\r\n    try {\r\n      const data = await DeletingMail();\r\n      Dispatch(MailSliceAction.DeleteItem());\r\n    } catch (error) {\r\n      // console.log(error);\r\n      Dispatch(MailSliceAction.DeleteItem());\r\n    }\r\n  };\r\n};\r\n\r\n//send maild upadte\r\nexport const UpdateMySentItem = (sentItem) => {\r\n  return async (Dispatch) => {\r\n    let emailId = localStorage.getItem(\"mailid\").replace(/[&@.]/g, \"\");\r\n\r\n    const UpdatedingmySendingItem = async () => {\r\n      const response = await fetch(\r\n        `https://mailbox-client-26e9b-default-rtdb.firebaseio.com/${emailId}/sentItem/.json`,\r\n        {\r\n          method: \"PUT\",\r\n          body: JSON.stringify(sentItem),\r\n          headers: {\r\n            \"Content-Type\": \"application/json\",\r\n          },\r\n        }\r\n      );\r\n      const data = await response.json();\r\n      if (data.error) {\r\n        throw new Error(\"faild\");\r\n      }\r\n      return data;\r\n    };\r\n    try {\r\n      const data = await UpdatedingmySendingItem();\r\n      // console.log(data);\r\n\r\n      // Dispatch( MymailSliceAction.sendItemUpdateTrigge());\r\n    } catch (error) {\r\n      // console.log(error);\r\n    }\r\n  };\r\n};\r\n","C:\\Users\\Admin\\Desktop\\Mail-Box-Clients\\MailBox -Client\\src\\Component\\InboxPage.js\\InboxPage.js",["94","95"],"C:\\Users\\Admin\\Desktop\\Mail-Box-Clients\\MailBox -Client\\src\\Component\\InboxPage.js\\InboxList.js",[],"C:\\Users\\Admin\\Desktop\\Mail-Box-Clients\\MailBox -Client\\src\\Component\\InboxPage.js\\InboxNavbar.js",["96","97","98","99","100","101"],"import React, { useState, useEffect } from \"react\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport { AuthsliceAction } from \"../../Store/Auth\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { styled, alpha } from \"@mui/material/styles\";\r\nimport AppBar from \"@mui/material/AppBar\";\r\nimport Box from \"@mui/material/Box\";\r\nimport Toolbar from \"@mui/material/Toolbar\";\r\nimport IconButton from \"@mui/material/IconButton\";\r\nimport Typography from \"@mui/material/Typography\";\r\nimport InputBase from \"@mui/material/InputBase\";\r\nimport Badge from \"@mui/material/Badge\";\r\nimport MenuItem from \"@mui/material/MenuItem\";\r\nimport Menu from \"@mui/material/Menu\";\r\nimport MenuIcon from \"@mui/icons-material/Menu\";\r\nimport SearchIcon from \"@mui/icons-material/Search\";\r\nimport AccountCircle from \"@mui/icons-material/AccountCircle\";\r\nimport MailIcon from \"@mui/icons-material/Mail\";\r\nimport NotificationsIcon from \"@mui/icons-material/Notifications\";\r\nimport MoreIcon from \"@mui/icons-material/MoreVert\";\r\nimport LogoutIcon from \"@mui/icons-material/ExitToApp\";\r\nimport \"./Inbox.css\";\r\nimport { Avatar, Button } from \"@mui/material\";\r\n// import { ToggleButton } from \"react-bootstrap\";\r\nimport ToggleButtonElement from \"./ToggleMenuButton\";\r\nconst Search = styled(\"div\")(({ theme }) => ({\r\n  position: \"relative\",\r\n  borderRadius: theme.shape.borderRadius,\r\n  backgroundColor: alpha(theme.palette.common.white, 0.15),\r\n  \"&:hover\": {\r\n    backgroundColor: alpha(theme.palette.common.white, 0.25),\r\n  },\r\n  marginRight: theme.spacing(2),\r\n  marginLeft: 0,\r\n  width: \"50%\",\r\n  [theme.breakpoints.up(\"sm\")]: {\r\n    marginLeft: theme.spacing(3),\r\n    width: \"50%\",\r\n  },\r\n}));\r\n\r\nconst SearchIconWrapper = styled(\"div\")(({ theme }) => ({\r\n  padding: theme.spacing(0, 2),\r\n  height: \"100%\",\r\n  position: \"absolute\",\r\n  pointerEvents: \"none\",\r\n  display: \"flex\",\r\n  alignItems: \"center\",\r\n  justifyContent: \"center\",\r\n}));\r\n\r\nconst StyledInputBase = styled(InputBase)(({ theme }) => ({\r\n  color: \"inherit\",\r\n  \"& .MuiInputBase-input\": {\r\n    padding: theme.spacing(1, 1, 1, 0),\r\n    // vertical padding + font size from searchIcon\r\n    paddingLeft: `calc(1em + ${theme.spacing(4)})`,\r\n    transition: theme.transitions.create(\"width\"),\r\n    width: \"100%\",\r\n    [theme.breakpoints.up(\"md\")]: {\r\n      width: \"20ch\",\r\n    },\r\n  },\r\n}));\r\n\r\nexport default function InboxNavbar() {\r\n  const [anchorEl, setAnchorEl] = useState(null);\r\n  const [mobileMoreAnchorEl, setMobileMoreAnchorEl] = useState(null);\r\n  const [state, setState] = React.useState({\r\n    left: false,\r\n  });\r\n\r\n  const unread = useSelector((state) => state.mail.unread);\r\n  const navigate = useNavigate();\r\n  const Dispatch = useDispatch();\r\n  let usermail = localStorage.getItem(\"mailid\").replace(/@gmail.com/g, \"\");\r\n  const logoutHandler = () => {\r\n    localStorage.clear();\r\n    Dispatch(AuthsliceAction.Login());\r\n    // navigate(\"/login\");\r\n  };\r\n\r\n  const isMenuOpen = Boolean(anchorEl);\r\n  const isMobileMenuOpen = Boolean(mobileMoreAnchorEl);\r\n\r\n  const handleProfileMenuOpen = (event) => {\r\n    setAnchorEl(event.currentTarget);\r\n  };\r\n\r\n  const handleMobileMenuClose = () => {\r\n    setMobileMoreAnchorEl(null);\r\n  };\r\n\r\n  const handleMenuClose = () => {\r\n    setAnchorEl(null);\r\n    handleMobileMenuClose();\r\n  };\r\n\r\n  const handleMobileMenuOpen = (event) => {\r\n    setMobileMoreAnchorEl(event.currentTarget);\r\n  };\r\n\r\n  const menuId = \"primary-search-account-menu\";\r\n  const renderMenu = (\r\n    <Menu\r\n      anchorEl={anchorEl}\r\n      anchorOrigin={{\r\n        vertical: \"top\",\r\n        horizontal: \"right\",\r\n      }}\r\n      id={menuId}\r\n      keepMounted\r\n      transformOrigin={{\r\n        vertical: \"top\",\r\n        horizontal: \"right\",\r\n      }}\r\n      open={isMenuOpen}\r\n      onClose={handleMenuClose}\r\n    >\r\n      <MenuItem onClick={handleMenuClose}>Profile</MenuItem>\r\n      <MenuItem onClick={handleMenuClose}>My account</MenuItem>\r\n    </Menu>\r\n  );\r\n\r\n  const mobileMenuId = \"primary-search-account-menu-mobile\";\r\n  const renderMobileMenu = (\r\n    <Menu\r\n      anchorEl={mobileMoreAnchorEl}\r\n      anchorOrigin={{\r\n        vertical: \"top\",\r\n        horizontal: \"right\",\r\n      }}\r\n      id={mobileMenuId}\r\n      keepMounted\r\n      transformOrigin={{\r\n        vertical: \"top\",\r\n        horizontal: \"right\",\r\n      }}\r\n      open={isMobileMenuOpen}\r\n      onClose={handleMobileMenuClose}\r\n    >\r\n      <MenuItem>\r\n        <IconButton size=\"large\" aria-label=\"show 4 new mails\" color=\"inherit\">\r\n          <Badge badgeContent={unread} color=\"error\">\r\n            <MailIcon />\r\n          </Badge>\r\n        </IconButton>\r\n        <p>Messages</p>\r\n      </MenuItem>\r\n      <MenuItem>\r\n        <IconButton\r\n          size=\"large\"\r\n          aria-label=\"show 17 new notifications\"\r\n          color=\"inherit\"\r\n        >\r\n          <Badge badgeContent={unread} color=\"error\">\r\n            <NotificationsIcon />\r\n          </Badge>\r\n        </IconButton>\r\n        <p>Notifications</p>\r\n      </MenuItem>\r\n      <MenuItem onClick={handleProfileMenuOpen}>\r\n        <IconButton\r\n          size=\"large\"\r\n          aria-label=\"account of current user\"\r\n          aria-controls=\"primary-search-account-menu\"\r\n          aria-haspopup=\"true\"\r\n          color=\"inherit\"\r\n        >\r\n          <AccountCircle />\r\n        </IconButton>\r\n        <p>Profile</p>\r\n      </MenuItem>\r\n      <MenuItem onClick={handleProfileMenuOpen}>\r\n        <IconButton\r\n          size=\"large\"\r\n          aria-label=\"account of current user\"\r\n          aria-controls=\"primary-search-account-menu\"\r\n          aria-haspopup=\"true\"\r\n          color=\"inherit\"\r\n          onClick={logoutHandler}\r\n        >\r\n          <LogoutIcon></LogoutIcon>\r\n        </IconButton>\r\n\r\n        <p>Logout</p>\r\n      </MenuItem>\r\n    </Menu>\r\n  );\r\n\r\n  return (\r\n    <Box sx={{ flexGrow: 1 }}>\r\n      <AppBar position=\"static\">\r\n        <Toolbar>\r\n          <ToggleButtonElement></ToggleButtonElement>\r\n\r\n          <Typography\r\n            variant=\"div\"\r\n            noWrap\r\n            component=\"div\"\r\n            sx={{ display: { xs: \"none\", sm: \"block\" } }}\r\n          >\r\n            <span className=\"G\">G</span>\r\n            <span className=\"mail\">mail</span>\r\n          </Typography>\r\n\r\n          {/* <Typography\r\n            variant=\"div\"\r\n            noWrap\r\n            component=\"div\"\r\n            sx={{ display: { xs: \"block\", sm: \"none\" } }}\r\n          >\r\n            <span className=\"G\">G</span>\r\n          </Typography> */}\r\n          <Search>\r\n            <SearchIconWrapper>\r\n              <SearchIcon />\r\n            </SearchIconWrapper>\r\n            <StyledInputBase\r\n              placeholder=\"Search…\"\r\n              inputProps={{ \"aria-label\": \"search\" }}\r\n            />\r\n          </Search>\r\n          <Box sx={{ flexGrow: 2 }} />\r\n          <Box sx={{ display: { xs: \"none\", md: \"flex\" } }}>\r\n            <IconButton\r\n              size=\"large\"\r\n              aria-label=\"show 4 new mails\"\r\n              color=\"inherit\"\r\n            >\r\n              <Badge badgeContent={unread} color=\"error\">\r\n                <MailIcon />\r\n              </Badge>\r\n            </IconButton>\r\n            <IconButton\r\n              size=\"large\"\r\n              aria-label=\"show 17 new notifications\"\r\n              color=\"inherit\"\r\n            >\r\n              <Badge badgeContent={unread} color=\"error\">\r\n                <NotificationsIcon />\r\n              </Badge>\r\n            </IconButton>\r\n            <IconButton\r\n              size=\"large\"\r\n              edge=\"end\"\r\n              aria-label=\"account of current user\"\r\n              aria-controls={menuId}\r\n              aria-haspopup=\"true\"\r\n              onClick={handleProfileMenuOpen}\r\n              color=\"inherit\"\r\n            >\r\n              <Avatar\r\n                alt=\"Cindy Baker\"\r\n                src=\"https://c.stocksy.com/a/IpI600/z9/1502340.jpg\"\r\n              />\r\n            </IconButton>\r\n          </Box>\r\n          <Box sx={{ display: { xs: \"flex\", sm: \"flex\", md: \"none\" } }}>\r\n            <IconButton\r\n              size=\"large\"\r\n              aria-label=\"show more\"\r\n              aria-controls={mobileMenuId}\r\n              aria-haspopup=\"true\"\r\n              onClick={handleMobileMenuOpen}\r\n              color=\"inherit\"\r\n            >\r\n              <MoreIcon />\r\n            </IconButton>\r\n          </Box>\r\n          <Box\r\n            sx={{ display: { xs: \"none\", md: \"flex\" } }}\r\n            onClick={logoutHandler}\r\n          >\r\n            <IconButton\r\n              size=\"large\"\r\n              aria-label=\"show more\"\r\n              aria-controls={mobileMenuId}\r\n              aria-haspopup=\"true\"\r\n              color=\"inherit\"\r\n            >\r\n              <Button variant=\"primary\">\r\n                Logout\r\n                <LogoutIcon />\r\n              </Button>\r\n            </IconButton>\r\n          </Box>\r\n        </Toolbar>\r\n        {/* <ToggleButton></ToggleButton> */}\r\n      </AppBar>\r\n      {renderMobileMenu}\r\n      {renderMenu}\r\n    </Box>\r\n  );\r\n}\r\n","C:\\Users\\Admin\\Desktop\\Mail-Box-Clients\\MailBox -Client\\src\\Component\\InboxPage.js\\InboxListItem.js",[],"C:\\Users\\Admin\\Desktop\\Mail-Box-Clients\\MailBox -Client\\src\\Component\\InboxPage.js\\MessageView.js",[],"C:\\Users\\Admin\\Desktop\\Mail-Box-Clients\\MailBox -Client\\src\\Component\\InboxPage.js\\Sentmessage\\SentMessage.js",["102","103","104"],"C:\\Users\\Admin\\Desktop\\Mail-Box-Clients\\MailBox -Client\\src\\Component\\InboxPage.js\\Sentmessage\\SendmessageItem.js",[],"C:\\Users\\Admin\\Desktop\\Mail-Box-Clients\\MailBox -Client\\src\\Store\\MymailSlice.js",[],"C:\\Users\\Admin\\Desktop\\Mail-Box-Clients\\MailBox -Client\\src\\Component\\InboxPage.js\\Sentmessage\\sentMessageView.js",["105"],"C:\\Users\\Admin\\Desktop\\Mail-Box-Clients\\MailBox -Client\\src\\Component\\InboxPage.js\\ToggleMenuButton.js",["106"],{"ruleId":"107","replacedBy":"108"},{"ruleId":"109","replacedBy":"110"},{"ruleId":"111","severity":1,"message":"112","line":34,"column":6,"nodeType":"113","endLine":34,"endColumn":23,"suggestions":"114"},{"ruleId":"111","severity":1,"message":"115","line":43,"column":6,"nodeType":"113","endLine":43,"endColumn":17,"suggestions":"116"},{"ruleId":"117","severity":1,"message":"118","line":3,"column":17,"nodeType":"119","messageId":"120","endLine":3,"endColumn":26},{"ruleId":"117","severity":1,"message":"121","line":8,"column":10,"nodeType":"119","messageId":"120","endLine":8,"endColumn":31},{"ruleId":"122","severity":1,"message":"123","line":34,"column":9,"nodeType":"124","messageId":"125","endLine":34,"endColumn":16},{"ruleId":"117","severity":1,"message":"126","line":146,"column":13,"nodeType":"119","messageId":"120","endLine":146,"endColumn":17},{"ruleId":"111","severity":1,"message":"127","line":25,"column":6,"nodeType":"113","endLine":25,"endColumn":8,"suggestions":"128"},{"ruleId":"111","severity":1,"message":"127","line":31,"column":6,"nodeType":"113","endLine":31,"endColumn":13,"suggestions":"129"},{"ruleId":"117","severity":1,"message":"118","line":62,"column":27,"nodeType":"119","messageId":"120","endLine":62,"endColumn":36},{"ruleId":"117","severity":1,"message":"130","line":76,"column":8,"nodeType":"119","messageId":"120","endLine":76,"endColumn":16},{"ruleId":"117","severity":1,"message":"131","line":130,"column":10,"nodeType":"119","messageId":"120","endLine":130,"endColumn":15},{"ruleId":"117","severity":1,"message":"132","line":130,"column":17,"nodeType":"119","messageId":"120","endLine":130,"endColumn":25},{"ruleId":"117","severity":1,"message":"133","line":135,"column":9,"nodeType":"119","messageId":"120","endLine":135,"endColumn":17},{"ruleId":"117","severity":1,"message":"134","line":137,"column":7,"nodeType":"119","messageId":"120","endLine":137,"endColumn":15},{"ruleId":"117","severity":1,"message":"118","line":1,"column":17,"nodeType":"119","messageId":"120","endLine":1,"endColumn":26},{"ruleId":"117","severity":1,"message":"135","line":2,"column":10,"nodeType":"119","messageId":"120","endLine":2,"endColumn":19},{"ruleId":"117","severity":1,"message":"136","line":5,"column":10,"nodeType":"119","messageId":"120","endLine":5,"endColumn":21},{"ruleId":"117","severity":1,"message":"133","line":8,"column":9,"nodeType":"119","messageId":"120","endLine":8,"endColumn":17},{"ruleId":"117","severity":1,"message":"137","line":12,"column":23,"nodeType":"119","messageId":"120","endLine":12,"endColumn":27},"no-native-reassign",["138"],"no-negated-in-lhs",["139"],"react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'islogin' and 'navi'. Either include them or remove the dependency array.","ArrayExpression",["140"],"React Hook useEffect has missing dependencies: 'Dispatch' and 'sentItem'. Either include them or remove the dependency array.",["141"],"no-unused-vars","'useEffect' is defined but never used.","Identifier","unusedVar","'LocalActivityOutlined' is defined but never used.","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ReturnStatement","expectedReturnValue","'data' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'Disptach'. Either include it or remove the dependency array.",["142"],["143"],"'MenuIcon' is defined but never used.","'state' is assigned a value but never used.","'setState' is assigned a value but never used.","'navigate' is assigned a value but never used.","'usermail' is assigned a value but never used.","'ListGroup' is defined but never used.","'useDispatch' is defined but never used.","'Send' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"144","fix":"145"},{"desc":"146","fix":"147"},{"desc":"148","fix":"149"},{"desc":"150","fix":"151"},"Update the dependencies array to be: [islogin, loginlocalstore, navi]",{"range":"152","text":"153"},"Update the dependencies array to be: [Dispatch, sendcount, sentItem]",{"range":"154","text":"155"},"Update the dependencies array to be: [Disptach]",{"range":"156","text":"157"},"Update the dependencies array to be: [Disptach, count]",{"range":"158","text":"159"},[1137,1154],"[islogin, loginlocalstore, navi]",[1444,1455],"[Dispatch, sendcount, sentItem]",[953,955],"[Disptach]",[1051,1058],"[Disptach, count]"]