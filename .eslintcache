[{"C:\\Users\\Admin\\Desktop\\Mail-Box-Clients\\MailBox -Client\\src\\index.js":"1","C:\\Users\\Admin\\Desktop\\Mail-Box-Clients\\MailBox -Client\\src\\App.js":"2","C:\\Users\\Admin\\Desktop\\Mail-Box-Clients\\MailBox -Client\\src\\Store\\store.js":"3","C:\\Users\\Admin\\Desktop\\Mail-Box-Clients\\MailBox -Client\\src\\Store\\Auth.js":"4","C:\\Users\\Admin\\Desktop\\Mail-Box-Clients\\MailBox -Client\\src\\Store\\Uivisible.js":"5","C:\\Users\\Admin\\Desktop\\Mail-Box-Clients\\MailBox -Client\\src\\Component\\AuthForm\\AuthForm.js":"6","C:\\Users\\Admin\\Desktop\\Mail-Box-Clients\\MailBox -Client\\src\\Store\\Action-thunk.js":"7","C:\\Users\\Admin\\Desktop\\Mail-Box-Clients\\MailBox -Client\\src\\Component\\TextEditing\\TextEditing.js":"8","C:\\Users\\Admin\\Desktop\\Mail-Box-Clients\\MailBox -Client\\src\\Store\\MailSlice.js":"9","C:\\Users\\Admin\\Desktop\\Mail-Box-Clients\\MailBox -Client\\src\\Store\\Mail-thunk.js":"10","C:\\Users\\Admin\\Desktop\\Mail-Box-Clients\\MailBox -Client\\src\\Component\\InboxPage.js\\InboxPage.js":"11","C:\\Users\\Admin\\Desktop\\Mail-Box-Clients\\MailBox -Client\\src\\Component\\InboxPage.js\\InboxList.js":"12","C:\\Users\\Admin\\Desktop\\Mail-Box-Clients\\MailBox -Client\\src\\Component\\InboxPage.js\\InboxNavbar.js":"13","C:\\Users\\Admin\\Desktop\\Mail-Box-Clients\\MailBox -Client\\src\\Component\\InboxPage.js\\InboxListItem.js":"14","C:\\Users\\Admin\\Desktop\\Mail-Box-Clients\\MailBox -Client\\src\\Component\\InboxPage.js\\MessageView.js":"15","C:\\Users\\Admin\\Desktop\\Mail-Box-Clients\\MailBox -Client\\src\\Component\\InboxPage.js\\Sentmessage\\SentMessage.js":"16","C:\\Users\\Admin\\Desktop\\Mail-Box-Clients\\MailBox -Client\\src\\Component\\InboxPage.js\\Sentmessage\\SendmessageItem.js":"17"},{"size":500,"mtime":1669989560324,"results":"18","hashOfConfig":"19"},{"size":1079,"mtime":1670035662605,"results":"20","hashOfConfig":"19"},{"size":331,"mtime":1669913957305,"results":"21","hashOfConfig":"19"},{"size":416,"mtime":1669890444771,"results":"22","hashOfConfig":"19"},{"size":389,"mtime":1669890450315,"results":"23","hashOfConfig":"19"},{"size":3378,"mtime":1669891184934,"results":"24","hashOfConfig":"19"},{"size":2189,"mtime":1669990285662,"results":"25","hashOfConfig":"19"},{"size":3054,"mtime":1669991327732,"results":"26","hashOfConfig":"19"},{"size":1467,"mtime":1670032733848,"results":"27","hashOfConfig":"19"},{"size":3710,"mtime":1669998974032,"results":"28","hashOfConfig":"19"},{"size":2893,"mtime":1670035763095,"results":"29","hashOfConfig":"19"},{"size":783,"mtime":1670033345818,"results":"30","hashOfConfig":"19"},{"size":1018,"mtime":1669993604068,"results":"31","hashOfConfig":"19"},{"size":1846,"mtime":1670035343979,"results":"32","hashOfConfig":"19"},{"size":902,"mtime":1670034202015,"results":"33","hashOfConfig":"19"},{"size":717,"mtime":1670035836861,"results":"34","hashOfConfig":"19"},{"size":1965,"mtime":1670035909036,"results":"35","hashOfConfig":"19"},{"filePath":"36","messages":"37","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},"lj8f1e",{"filePath":"39","messages":"40","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"41","messages":"42","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"43","messages":"44","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"45","messages":"46","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"47","messages":"48","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"49","usedDeprecatedRules":"38"},{"filePath":"50","messages":"51","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"52","usedDeprecatedRules":"38"},{"filePath":"53","messages":"54","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"55","usedDeprecatedRules":"38"},{"filePath":"56","messages":"57","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"58","messages":"59","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"60","usedDeprecatedRules":"38"},{"filePath":"61","messages":"62","errorCount":0,"fatalErrorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"63","messages":"64","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"65","messages":"66","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"67","usedDeprecatedRules":"38"},{"filePath":"68","messages":"69","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"70","messages":"71","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"72","messages":"73","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"74","messages":"75","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\Users\\Admin\\Desktop\\Mail-Box-Clients\\MailBox -Client\\src\\index.js",[],["76","77"],"C:\\Users\\Admin\\Desktop\\Mail-Box-Clients\\MailBox -Client\\src\\App.js",["78"],"C:\\Users\\Admin\\Desktop\\Mail-Box-Clients\\MailBox -Client\\src\\Store\\store.js",[],"C:\\Users\\Admin\\Desktop\\Mail-Box-Clients\\MailBox -Client\\src\\Store\\Auth.js",[],"C:\\Users\\Admin\\Desktop\\Mail-Box-Clients\\MailBox -Client\\src\\Store\\Uivisible.js",[],"C:\\Users\\Admin\\Desktop\\Mail-Box-Clients\\MailBox -Client\\src\\Component\\AuthForm\\AuthForm.js",["79","80","81"],"import Button from \"react-bootstrap/Button\";\r\nimport Form from \"react-bootstrap/Form\";\r\nimport React from \"react\";\r\nimport { Col, Row, Container } from \"react-bootstrap\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { useRef } from \"react\";\r\nimport { sendsignup, Sendlogin } from \"../../Store/Action-thunk\";\r\nimport { AuthsliceAction } from \"../../Store/Auth\";\r\nimport { UisliceAction } from \"../../Store/Uivisible\";\r\n\r\nconst AuthForm = () => {\r\n  const Disptach = useDispatch();\r\n  const islogin = useSelector((state) => state.uiauth.islogin);\r\n  const Enteredname = React.createRef(null);\r\n  const Enteredemail = React.createRef(null);\r\n  const EnteredPassword = React.createRef(null);\r\n  const EnteredConfirmPassword = React.createRef(null);\r\n  const onsubmitHandler = (event) => {\r\n    event.preventDefault();\r\n    const obj = {\r\n      email: Enteredemail.current.value,\r\n      password: EnteredPassword.current.value,\r\n      returnSecureToken: true,\r\n    };\r\n    if (obj.email === \"\" && obj.password === \"\") {\r\n      return;\r\n    }\r\n    if (islogin) {\r\n      Disptach(Sendlogin(obj));\r\n    }\r\n    if (!islogin && obj.password === EnteredConfirmPassword.current.value) {\r\n      Disptach(sendsignup(obj));\r\n    }\r\n    // Disptach(AuthsliceAction.Login(obj));\r\n    //;\r\n    console.log(obj);\r\n  };\r\n  const buttonToggle = () => {\r\n    Disptach(UisliceAction.setisLogin());\r\n  };\r\n  return (\r\n    <Container className=\"pt-5\">\r\n      <Row className=\"justify-content-md-center\">\r\n        <Col xs={12} md={4}>\r\n          <Form\r\n            className=\"shadow p-3 mt-5 bg-white rounded\"\r\n            onSubmit={onsubmitHandler}\r\n          >\r\n            <h3>{islogin ? \"Login\" : \"SignUp\"}</h3>\r\n            <Form.Group controlId=\"email\">\r\n              <Form.Label>Email Address</Form.Label>\r\n              <Form.Control\r\n                type=\"email\"\r\n                placeholder=\"Enter email\"\r\n                ref={Enteredemail}\r\n              ></Form.Control>\r\n            </Form.Group>\r\n            <Form.Group controlId=\"password\">\r\n              <Form.Label>Password</Form.Label>\r\n              <Form.Control\r\n                type=\"password\"\r\n                placeholder=\"Enter password\"\r\n                autoComplete=\"off\"\r\n                ref={EnteredPassword}\r\n              ></Form.Control>\r\n            </Form.Group>\r\n            {!islogin && (\r\n              <Form.Group controlId=\"Confirm Password\">\r\n                <Form.Label>Confirm Password</Form.Label>\r\n                <Form.Control\r\n                  type=\"password\"\r\n                  placeholder=\"Enter password\"\r\n                  ref={EnteredConfirmPassword}\r\n                ></Form.Control>\r\n              </Form.Group>\r\n            )}\r\n            <Button\r\n              type=\"submit\"\r\n              variant=\"primary\"\r\n              className=\"btn btn-primary btn-lg btn-block mb-2\"\r\n            >\r\n              {islogin ? \"Login\" : \"SignUp\"}\r\n            </Button>\r\n            <Form.Group controlId=\"btn-secondary\">\r\n              <Button\r\n                className=\"btn btn-secondary btn-lg btn-block\"\r\n                onClick={buttonToggle}\r\n              >\r\n                {islogin ? \"SignUp\" : \"Login existing account\"}\r\n              </Button>\r\n            </Form.Group>\r\n          </Form>\r\n        </Col>\r\n      </Row>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default AuthForm;\r\n","C:\\Users\\Admin\\Desktop\\Mail-Box-Clients\\MailBox -Client\\src\\Store\\Action-thunk.js",["82"],"import { AuthsliceAction } from \"./Auth\";\r\n\r\nconst loginURL =\r\n  \"https://identitytoolkit.googleapis.com/v1/accounts:signInWithPassword?key=AIzaSyBHfDdJCB5KGcrwcnmpsK7V5Q8haFmqDGM\";\r\nconst signupUrl =\r\n  \"https://identitytoolkit.googleapis.com/v1/accounts:signUp?key=AIzaSyBHfDdJCB5KGcrwcnmpsK7V5Q8haFmqDGM\";\r\nconst RestUrl =\r\n  \"https://identitytoolkit.googleapis.com/v1/accounts:sendOobCode?key=AIzaSyBHfDdJCB5KGcrwcnmpsK7V5Q8haFmqDGM\";\r\nexport const sendsignup = (obj) => {\r\n  return async (dispatch) => {\r\n    const sendingAuth = async () => {\r\n      const response = await fetch(signupUrl, {\r\n        method: \"POST\",\r\n        body: JSON.stringify(obj),\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n        },\r\n      });\r\n\r\n      const data = await response.json();\r\n      if (data.error) {\r\n        alert(data.error.message);\r\n        throw new Error(data.error.message);\r\n      }\r\n\r\n      return data;\r\n    };\r\n    try {\r\n      const data = await sendingAuth();\r\n      dispatch(AuthsliceAction.Login(data));\r\n    } catch (error) {\r\n      console.log(error.message);\r\n    }\r\n  };\r\n};\r\n\r\nexport const Sendlogin = (obj) => {\r\n  return async (dispatch) => {\r\n    const sendingloginAuth = async () => {\r\n      const response = await fetch(loginURL, {\r\n        method: \"POST\",\r\n        body: JSON.stringify(obj),\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n        },\r\n      });\r\n\r\n      const data = await response.json();\r\n      if (data.error) {\r\n        alert(data.error.message);\r\n        throw new Error(data.error.message);\r\n      }\r\n\r\n      return data;\r\n    };\r\n    try {\r\n      const data = await sendingloginAuth();\r\n      const id = await data.idToken;\r\n\r\n      localStorage.setItem(\"id\", data.idToken);\r\n      localStorage.setItem(\"islogin\", \"true\");\r\n      localStorage.setItem(\"mailid\", obj.email);\r\n      //  console.log(id);\r\n      dispatch(AuthsliceAction.Login(id));\r\n    } catch (error) {\r\n      //   dispatch(\r\n      //     AuthsliceAction.Login({\r\n      //       status: \"error\",\r\n      //       title: \"error!\",\r\n      //       message: \"Sent cart data successfully!\",\r\n      //     })\r\n      //   );\r\n    }\r\n  };\r\n};\r\n","C:\\Users\\Admin\\Desktop\\Mail-Box-Clients\\MailBox -Client\\src\\Component\\TextEditing\\TextEditing.js",["83"],"import React, { useState } from \"react\";\r\nimport { Editor } from \"react-draft-wysiwyg\";\r\nimport \"react-draft-wysiwyg/dist/react-draft-wysiwyg.css\";\r\nimport { Row, Col, Container, Card, Button } from \"react-bootstrap\";\r\nimport { Form } from \"react-bootstrap\";\r\nimport \"./TextEditing.css\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { sendMailHandler } from \"../../Store/Mail-thunk\";\r\n\r\n// import { EditorState, convertFromRaw, convertToRaw } from \"draft-js\";\r\n\r\nconst TextEditing = () => {\r\n  const Disptach = useDispatch();\r\n  const Enteredemail = React.createRef(null);\r\n  const Enteredsubject = React.createRef(null);\r\n  const Enteredtext = React.createRef(null);\r\n  const FormsubmitHandler = (event) => {\r\n    event.preventDefault();\r\n    const mailData = {\r\n      email: Enteredemail.current.value,\r\n      subject: Enteredsubject.current.value,\r\n      text: Enteredtext.current.value,\r\n      readreceipt: false,\r\n    };\r\n    Disptach(sendMailHandler(mailData));\r\n    console.log(mailData, \"TextEditing-FormsubmitHandler\");\r\n  };\r\n  return (\r\n    <React.Fragment>\r\n      <Container fluid>\r\n        <Row>\r\n          <Col>\r\n            <Form className=\"pt-1  pr-3\" onSubmit={FormsubmitHandler}>\r\n              <Card style={{ width: \"50rem\" }}>\r\n                {/* <Card.Header>\r\n                  <h3>welcome </h3>\r\n                </Card.Header> */}\r\n                <Card.Body className=\"colours\">\r\n                  <Form.Group controlId=\"email\">\r\n                    <Form.Label>Email Address</Form.Label>\r\n                    <Form.Control\r\n                      size=\"sm\"\r\n                      type=\"email\"\r\n                      placeholder=\"Enter email\"\r\n                      ref={Enteredemail}\r\n                    ></Form.Control>\r\n                  </Form.Group>\r\n                  <Form.Group controlId=\"subject\">\r\n                    <Form.Label>subject</Form.Label>\r\n                    <Form.Control\r\n                      type=\"text\"\r\n                      placeholder=\"Enter subject\"\r\n                      ref={Enteredsubject}\r\n                    ></Form.Control>\r\n                  </Form.Group>\r\n                  <Form.Group controlId=\"message\">\r\n                    <Form.Label>message</Form.Label>\r\n                    <Form.Control as=\"textarea\" rows={5} ref={Enteredtext} />\r\n                  </Form.Group>\r\n                </Card.Body>\r\n\r\n                <Card.Footer>\r\n                  <Editor\r\n                    // editorState={editorState}\r\n                    toolbarClassName=\"toolbarClassName\"\r\n                    wrapperClassName=\"wrapperClassName\"\r\n                    editorClassName=\"editorClassName\"\r\n                    // onEditorStateChange={updateTextDescription}\r\n                  />\r\n                  <Button variant=\"primary\" type=\"submit\">\r\n                    Send\r\n                  </Button>\r\n                </Card.Footer>\r\n              </Card>\r\n            </Form>\r\n          </Col>\r\n        </Row>\r\n      </Container>\r\n    </React.Fragment>\r\n  );\r\n};\r\nexport default TextEditing;\r\n","C:\\Users\\Admin\\Desktop\\Mail-Box-Clients\\MailBox -Client\\src\\Store\\MailSlice.js",["84","85"],"C:\\Users\\Admin\\Desktop\\Mail-Box-Clients\\MailBox -Client\\src\\Store\\Mail-thunk.js",["86"],"import { MailSliceAction } from \"./MailSlice\";\r\n\r\nexport const sendMailHandler = (mailobj) => {\r\n  return async (Disptach) => {\r\n    let emailId = await mailobj.email.replace(/[&@.]/g, \"\");\r\n\r\n    const sendingmail = async () => {\r\n      const response = await fetch(\r\n        `https://mailbox-client-26e9b-default-rtdb.firebaseio.com//${emailId}.json`,\r\n        {\r\n          method: \"POST\",\r\n          body: JSON.stringify(mailobj),\r\n          headers: {\r\n            \"Content-Type\": \"application/json\",\r\n          },\r\n        }\r\n      );\r\n      const data = await response.json();\r\n      if (data.error) {\r\n        throw new Error(\"faild\");\r\n      }\r\n      //   console.log(data);\r\n      return data;\r\n    };\r\n    try {\r\n      await sendingmail();\r\n      Disptach(MailSliceAction.setSentData());\r\n      //   console.log(data);\r\n    } catch (error) {\r\n      console.log(error.message);\r\n    }\r\n  };\r\n};\r\n\r\nexport const getmailHandler = () => {\r\n  let emailId = localStorage.getItem(\"mailid\").replace(/[&@.]/g, \"\");\r\n  console.log(emailId);\r\n  return async (Disptach) => {\r\n    const gettingMailList = async () => {\r\n      const response = await fetch(\r\n        `https://mailbox-client-26e9b-default-rtdb.firebaseio.com//${emailId}.json`,\r\n        {\r\n          method: \"Get\",\r\n        }\r\n      );\r\n      const data = await response.json();\r\n      if (data.error) {\r\n        console.log(data);\r\n        throw new Error(\"faild\");\r\n      }\r\n\r\n      return data;\r\n    };\r\n    try {\r\n      const data = await gettingMailList();\r\n\r\n      // console.log(data);\r\n      const transformeddata = [];\r\n      for (const key in data) {\r\n        const Obj = {\r\n          id: key,\r\n          ...data[key],\r\n        };\r\n        transformeddata.push(Obj);\r\n      }\r\n      // console.log(transformeddata);\r\n      Disptach(MailSliceAction.addItem(transformeddata));\r\n    } catch (error) {\r\n      console.log(\"error message\");\r\n    }\r\n  };\r\n};\r\n\r\nexport const UpdateList = (obj) => {\r\n  return async (Dispatch) => {\r\n    let emailId = localStorage.getItem(\"mailid\").replace(/[&@.]/g, \"\");\r\n\r\n    const UpdateEmailList = async () => {\r\n      const response = await fetch(\r\n        `https://mailbox-client-26e9b-default-rtdb.firebaseio.com//${emailId}/${obj.id}.json`,\r\n        {\r\n          method: \"PUT\",\r\n          body: JSON.stringify({\r\n            email: obj.email,\r\n            subject: obj.subject,\r\n            text: obj.text,\r\n            readreceipt: true,\r\n          }),\r\n          headers: {\r\n            \"Content-Type\": \"application/json\",\r\n          },\r\n        }\r\n      );\r\n      const data = await response.json();\r\n      if (data.error) {\r\n        throw new Error(\"faild\");\r\n      }\r\n      return data;\r\n    };\r\n    try {\r\n      await UpdateEmailList();\r\n      Dispatch(MailSliceAction.updataItems());\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  };\r\n};\r\n\r\nexport const DeleteMail = (id) => {\r\n  return async (Dispatch) => {\r\n    let emailId = localStorage.getItem(\"mailid\").replace(/[&@.]/g, \"\");\r\n\r\n    const DeletingMail = async () => {\r\n      const response = await fetch(\r\n        `https://mailbox-client-26e9b-default-rtdb.firebaseio.com//${emailId}/${id}.json`,\r\n        {\r\n          method: \"DELETE\",\r\n          headers: {\r\n            \"Content-Type\": \"application/json\",\r\n          },\r\n        }\r\n      );\r\n      const data = await response.json();\r\n      if (data.error) {\r\n        console.log(data);\r\n        // throw new Error(\"faild\");\r\n      }\r\n      return data;\r\n    };\r\n    try {\r\n      const data = await DeletingMail();\r\n      Dispatch(MailSliceAction.DeleteItem());\r\n    } catch (error) {\r\n      console.log(error);\r\n      Dispatch(MailSliceAction.DeleteItem());\r\n    }\r\n  };\r\n};\r\n","C:\\Users\\Admin\\Desktop\\Mail-Box-Clients\\MailBox -Client\\src\\Component\\InboxPage.js\\InboxPage.js",["87","88","89","90","91","92","93","94"],"C:\\Users\\Admin\\Desktop\\Mail-Box-Clients\\MailBox -Client\\src\\Component\\InboxPage.js\\InboxList.js",["95","96","97"],"C:\\Users\\Admin\\Desktop\\Mail-Box-Clients\\MailBox -Client\\src\\Component\\InboxPage.js\\InboxNavbar.js",["98","99","100","101","102"],"import React from \"react\";\r\nimport \"./Inbox.css\";\r\nimport { Container, Form, Button, Row, Col, ListGroup } from \"react-bootstrap\";\r\nimport { Navbar } from \"react-bootstrap\";\r\nimport { Nav } from \"react-bootstrap\";\r\n\r\nconst InboxNavbar = () => {\r\n  return (\r\n    <>\r\n      <Navbar bg=\"success\">\r\n        <Container fluid>\r\n          <img\r\n            className=\"thum-img\"\r\n            src=\"https://upload.wikimedia.org/wikipedia/commons/thumb/7/7e/Gmail_icon_%282020%29.svg/1200px-Gmail_icon_%282020%29.svg.png\"\r\n          ></img>\r\n\r\n          {/* <Nav>\r\n            <Nav.Link>Home</Nav.Link>\r\n          </Nav> */}\r\n          <Form className=\"d-flex pl-5\" style={{ width: \"600px\" }}>\r\n            <Form.Control\r\n              type=\"text\"\r\n              placeholder=\"Search\"\r\n              className=\"me-7\"\r\n              aria-label=\"Search\"\r\n            />\r\n            <Button variant=\"primary\">Search</Button>\r\n          </Form>\r\n        </Container>\r\n      </Navbar>\r\n    </>\r\n  );\r\n};\r\nexport default InboxNavbar;\r\n","C:\\Users\\Admin\\Desktop\\Mail-Box-Clients\\MailBox -Client\\src\\Component\\InboxPage.js\\InboxListItem.js",[],"C:\\Users\\Admin\\Desktop\\Mail-Box-Clients\\MailBox -Client\\src\\Component\\InboxPage.js\\MessageView.js",[],"C:\\Users\\Admin\\Desktop\\Mail-Box-Clients\\MailBox -Client\\src\\Component\\InboxPage.js\\Sentmessage\\SentMessage.js",["103"],"C:\\Users\\Admin\\Desktop\\Mail-Box-Clients\\MailBox -Client\\src\\Component\\InboxPage.js\\Sentmessage\\SendmessageItem.js",["104"],{"ruleId":"105","replacedBy":"106"},{"ruleId":"107","replacedBy":"108"},{"ruleId":"109","severity":1,"message":"110","line":7,"column":8,"nodeType":"111","messageId":"112","endLine":7,"endColumn":19},{"ruleId":"109","severity":1,"message":"113","line":6,"column":10,"nodeType":"111","messageId":"112","endLine":6,"endColumn":16},{"ruleId":"109","severity":1,"message":"114","line":8,"column":10,"nodeType":"111","messageId":"112","endLine":8,"endColumn":25},{"ruleId":"109","severity":1,"message":"115","line":14,"column":9,"nodeType":"111","messageId":"112","endLine":14,"endColumn":20},{"ruleId":"109","severity":1,"message":"116","line":7,"column":7,"nodeType":"111","messageId":"112","endLine":7,"endColumn":14},{"ruleId":"109","severity":1,"message":"117","line":1,"column":17,"nodeType":"111","messageId":"112","endLine":1,"endColumn":25},{"ruleId":"118","severity":1,"message":"119","line":29,"column":31,"nodeType":"120","messageId":"121","endLine":29,"endColumn":33},{"ruleId":"122","severity":1,"message":"123","line":32,"column":9,"nodeType":"124","messageId":"125","endLine":32,"endColumn":16},{"ruleId":"109","severity":1,"message":"126","line":131,"column":13,"nodeType":"111","messageId":"112","endLine":131,"endColumn":17},{"ruleId":"109","severity":1,"message":"127","line":3,"column":21,"nodeType":"111","messageId":"112","endLine":3,"endColumn":25},{"ruleId":"109","severity":1,"message":"128","line":3,"column":27,"nodeType":"111","messageId":"112","endLine":3,"endColumn":33},{"ruleId":"109","severity":1,"message":"129","line":5,"column":8,"nodeType":"111","messageId":"112","endLine":5,"endColumn":17},{"ruleId":"109","severity":1,"message":"130","line":7,"column":8,"nodeType":"111","messageId":"112","endLine":7,"endColumn":19},{"ruleId":"109","severity":1,"message":"131","line":11,"column":10,"nodeType":"111","messageId":"112","endLine":11,"endColumn":20},{"ruleId":"109","severity":1,"message":"132","line":14,"column":8,"nodeType":"111","messageId":"112","endLine":14,"endColumn":19},{"ruleId":"133","severity":1,"message":"134","line":26,"column":6,"nodeType":"135","endLine":26,"endColumn":8,"suggestions":"136"},{"ruleId":"133","severity":1,"message":"134","line":32,"column":6,"nodeType":"135","endLine":32,"endColumn":13,"suggestions":"137"},{"ruleId":"109","severity":1,"message":"138","line":4,"column":10,"nodeType":"111","messageId":"112","endLine":4,"endColumn":19},{"ruleId":"109","severity":1,"message":"131","line":5,"column":10,"nodeType":"111","messageId":"112","endLine":5,"endColumn":20},{"ruleId":"109","severity":1,"message":"139","line":7,"column":23,"nodeType":"111","messageId":"112","endLine":7,"endColumn":34},{"ruleId":"109","severity":1,"message":"140","line":3,"column":35,"nodeType":"111","messageId":"112","endLine":3,"endColumn":38},{"ruleId":"109","severity":1,"message":"141","line":3,"column":40,"nodeType":"111","messageId":"112","endLine":3,"endColumn":43},{"ruleId":"109","severity":1,"message":"142","line":3,"column":45,"nodeType":"111","messageId":"112","endLine":3,"endColumn":54},{"ruleId":"109","severity":1,"message":"143","line":5,"column":10,"nodeType":"111","messageId":"112","endLine":5,"endColumn":13},{"ruleId":"144","severity":1,"message":"145","line":12,"column":11,"nodeType":"146","endLine":15,"endColumn":12},{"ruleId":"109","severity":1,"message":"139","line":5,"column":23,"nodeType":"111","messageId":"112","endLine":5,"endColumn":34},{"ruleId":"109","severity":1,"message":"147","line":13,"column":9,"nodeType":"111","messageId":"112","endLine":13,"endColumn":17},"no-native-reassign",["148"],"no-negated-in-lhs",["149"],"no-unused-vars","'MessageView' is defined but never used.","Identifier","unusedVar","'useRef' is defined but never used.","'AuthsliceAction' is defined but never used.","'Enteredname' is assigned a value but never used.","'RestUrl' is assigned a value but never used.","'useState' is defined but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ReturnStatement","expectedReturnValue","'data' is assigned a value but never used.","'Form' is defined but never used.","'Button' is defined but never used.","'InboxList' is defined but never used.","'TextEditing' is defined but never used.","'UpdateList' is defined but never used.","'SentMessage' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'Disptach'. Either include it or remove the dependency array.","ArrayExpression",["150"],["151"],"'useEffect' is defined but never used.","'useDispatch' is defined but never used.","'Row' is defined but never used.","'Col' is defined but never used.","'ListGroup' is defined but never used.","'Nav' is defined but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'Dispatch' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"152","fix":"153"},{"desc":"154","fix":"155"},"Update the dependencies array to be: [Disptach]",{"range":"156","text":"157"},"Update the dependencies array to be: [Disptach, count]",{"range":"158","text":"159"},[1014,1016],"[Disptach]",[1112,1119],"[Disptach, count]"]