[{"C:\\Users\\Admin\\Desktop\\Mail-Box-Clients\\MailBox -Client\\src\\index.js":"1","C:\\Users\\Admin\\Desktop\\Mail-Box-Clients\\MailBox -Client\\src\\App.js":"2","C:\\Users\\Admin\\Desktop\\Mail-Box-Clients\\MailBox -Client\\src\\Store\\store.js":"3","C:\\Users\\Admin\\Desktop\\Mail-Box-Clients\\MailBox -Client\\src\\Store\\Auth.js":"4","C:\\Users\\Admin\\Desktop\\Mail-Box-Clients\\MailBox -Client\\src\\Store\\Uivisible.js":"5","C:\\Users\\Admin\\Desktop\\Mail-Box-Clients\\MailBox -Client\\src\\Component\\AuthForm\\AuthForm.js":"6","C:\\Users\\Admin\\Desktop\\Mail-Box-Clients\\MailBox -Client\\src\\Store\\Action-thunk.js":"7","C:\\Users\\Admin\\Desktop\\Mail-Box-Clients\\MailBox -Client\\src\\Component\\TextEditing\\TextEditing.js":"8","C:\\Users\\Admin\\Desktop\\Mail-Box-Clients\\MailBox -Client\\src\\Store\\MailSlice.js":"9","C:\\Users\\Admin\\Desktop\\Mail-Box-Clients\\MailBox -Client\\src\\Store\\Mail-thunk.js":"10","C:\\Users\\Admin\\Desktop\\Mail-Box-Clients\\MailBox -Client\\src\\Component\\InboxPage.js\\InboxPage.js":"11","C:\\Users\\Admin\\Desktop\\Mail-Box-Clients\\MailBox -Client\\src\\Component\\InboxPage.js\\InboxList.js":"12","C:\\Users\\Admin\\Desktop\\Mail-Box-Clients\\MailBox -Client\\src\\Component\\InboxPage.js\\InboxNavbar.js":"13","C:\\Users\\Admin\\Desktop\\Mail-Box-Clients\\MailBox -Client\\src\\Component\\InboxPage.js\\InboxListItem.js":"14","C:\\Users\\Admin\\Desktop\\Mail-Box-Clients\\MailBox -Client\\src\\Component\\InboxPage.js\\MessageView.js":"15","C:\\Users\\Admin\\Desktop\\Mail-Box-Clients\\MailBox -Client\\src\\Component\\InboxPage.js\\Sentmessage\\SentMessage.js":"16","C:\\Users\\Admin\\Desktop\\Mail-Box-Clients\\MailBox -Client\\src\\Component\\InboxPage.js\\Sentmessage\\SendmessageItem.js":"17","C:\\Users\\Admin\\Desktop\\Mail-Box-Clients\\MailBox -Client\\src\\Store\\MymailSlice.js":"18","C:\\Users\\Admin\\Desktop\\Mail-Box-Clients\\MailBox -Client\\src\\Component\\InboxPage.js\\Sentmessage\\sentMessageView.js":"19","C:\\Users\\Admin\\Desktop\\Mail-Box-Clients\\MailBox -Client\\src\\Component\\InboxPage.js\\ToggleMenuButton.js":"20","C:\\Users\\Admin\\Desktop\\Mail-Box-Clients\\MailBox -Client\\src\\Component\\profile\\Profile.js":"21"},{"size":502,"mtime":1684726368531,"results":"22","hashOfConfig":"23"},{"size":2327,"mtime":1684826360512,"results":"24","hashOfConfig":"23"},{"size":407,"mtime":1670039479314,"results":"25","hashOfConfig":"23"},{"size":424,"mtime":1670111614430,"results":"26","hashOfConfig":"23"},{"size":389,"mtime":1669890450315,"results":"27","hashOfConfig":"23"},{"size":3738,"mtime":1684821743661,"results":"28","hashOfConfig":"23"},{"size":2254,"mtime":1684824156960,"results":"29","hashOfConfig":"23"},{"size":5505,"mtime":1684824389909,"results":"30","hashOfConfig":"23"},{"size":1495,"mtime":1670119746332,"results":"31","hashOfConfig":"23"},{"size":5115,"mtime":1684813332858,"results":"32","hashOfConfig":"23"},{"size":4503,"mtime":1684815081815,"results":"33","hashOfConfig":"23"},{"size":667,"mtime":1684808353390,"results":"34","hashOfConfig":"23"},{"size":9186,"mtime":1684830753194,"results":"35","hashOfConfig":"23"},{"size":2248,"mtime":1684819104526,"results":"36","hashOfConfig":"23"},{"size":904,"mtime":1684737220136,"results":"37","hashOfConfig":"23"},{"size":947,"mtime":1684814404999,"results":"38","hashOfConfig":"23"},{"size":2383,"mtime":1684818981913,"results":"39","hashOfConfig":"23"},{"size":971,"mtime":1684813761052,"results":"40","hashOfConfig":"23"},{"size":968,"mtime":1684814507453,"results":"41","hashOfConfig":"23"},{"size":2894,"mtime":1684808587785,"results":"42","hashOfConfig":"23"},{"size":2035,"mtime":1684829947348,"results":"43","hashOfConfig":"23"},{"filePath":"44","messages":"45","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},"lj8f1e",{"filePath":"47","messages":"48","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"49","usedDeprecatedRules":"46"},{"filePath":"50","messages":"51","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"52","messages":"53","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"54","messages":"55","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"56","messages":"57","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"58","usedDeprecatedRules":"46"},{"filePath":"59","messages":"60","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"61","messages":"62","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"63","messages":"64","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"65","usedDeprecatedRules":"46"},{"filePath":"66","messages":"67","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"68","usedDeprecatedRules":"46"},{"filePath":"69","messages":"70","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"71","usedDeprecatedRules":"46"},{"filePath":"72","messages":"73","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"74","messages":"75","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"76","messages":"77","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"78","messages":"79","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"80","messages":"81","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"82","usedDeprecatedRules":"46"},{"filePath":"83","messages":"84","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"85","messages":"86","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"87","messages":"88","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"89","usedDeprecatedRules":"46"},{"filePath":"90","messages":"91","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"92","usedDeprecatedRules":"46"},{"filePath":"93","messages":"94","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\Users\\Admin\\Desktop\\Mail-Box-Clients\\MailBox -Client\\src\\index.js",[],["95","96"],"C:\\Users\\Admin\\Desktop\\Mail-Box-Clients\\MailBox -Client\\src\\App.js",["97","98"],"import { Route, Routes, Navigate } from \"react-router-dom\";\nimport React, { useEffect, Suspense } from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { UpdateMySentItem } from \"./Store/Mail-thunk\";\nimport { useNavigate } from \"react-router-dom\";\nconst InboxPage = React.lazy(() =>\n  import(\"./Component/InboxPage.js/InboxPage\")\n);\nconst TextEditing = React.lazy(() =>\n  import(\"./Component/TextEditing/TextEditing\")\n);\nconst AuthForm = React.lazy(() => import(\"./Component/AuthForm/AuthForm\"));\nconst SentMessage = React.lazy(() =>\n  import(\"./Component/InboxPage.js/Sentmessage/SentMessage\")\n);\nconst InboxList = React.lazy(() =>\n  import(\"./Component/InboxPage.js/InboxList\")\n);\nconst Profile = React.lazy(() => import(\"./Component/profile/Profile\"));\nfunction App() {\n  let loginlocalstore = localStorage.getItem(\"islogin\") === \"true\";\n  // console.log(loginlocalstore);\n  const navi = useNavigate();\n  const islogin = useSelector((state) => state.auth.islogin);\n  const Dispatch = useDispatch();\n  useEffect(() => {\n    if (loginlocalstore || islogin) {\n      navi(\"/main/text-edit\");\n      console.log(\" navi\");\n    }\n    if (!loginlocalstore) {\n      navi(\"/login\");\n    }\n  }, [loginlocalstore]);\n\n  const sentItem = useSelector((state) => state.mymail.sentItem);\n  const sendcount = useSelector((state) => state.mymail.sendcount);\n  useEffect(() => {\n    // console.log(\"updateing seny mail\",sentItem);\n    if (sendcount > 0) {\n      Dispatch(UpdateMySentItem(sentItem));\n    }\n  }, [sendcount]);\n  // console.log(\"app\", sentItem);\n  return (\n    // <div>\n    <Suspense fallback={<p className=\"loading\">Loading .....</p>}>\n      <Routes>\n        <Route path=\"/login\" element={<AuthForm />}></Route>\n\n        {loginlocalstore && (\n          <Route path=\"/main/*\" element={<InboxPage />}>\n            <Route path=\"profile\" element={<Profile />} />\n            <Route path=\"inboxlist\" element={<InboxList />} />\n            <Route path=\"text-edit\" element={<TextEditing />} />\n            <Route path=\"sentmessage\" element={<SentMessage />} />\n          </Route>\n        )}\n        {!loginlocalstore && (\n          <Route element={<Navigate replace to=\"login\" />} />\n        )}\n\n        {/* <TextEditing></TextEditing> */}\n      </Routes>\n    </Suspense>\n    // </div>\n  );\n}\n\nexport default App;\n","C:\\Users\\Admin\\Desktop\\Mail-Box-Clients\\MailBox -Client\\src\\Store\\store.js",[],"C:\\Users\\Admin\\Desktop\\Mail-Box-Clients\\MailBox -Client\\src\\Store\\Auth.js",[],"C:\\Users\\Admin\\Desktop\\Mail-Box-Clients\\MailBox -Client\\src\\Store\\Uivisible.js",[],"C:\\Users\\Admin\\Desktop\\Mail-Box-Clients\\MailBox -Client\\src\\Component\\AuthForm\\AuthForm.js",["99","100"],"import Button from \"react-bootstrap/Button\";\r\nimport Form from \"react-bootstrap/Form\";\r\nimport React, { useEffect } from \"react\";\r\nimport { Col, Row, Container } from \"react-bootstrap\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { sendsignup, Sendlogin } from \"../../Store/Action-thunk\";\r\nimport { UisliceAction } from \"../../Store/Uivisible\";\r\nimport { LocalActivityOutlined, LockPersonRounded } from \"@mui/icons-material\";\r\nimport { IconButton } from \"@mui/material\";\r\n\r\nconst AuthForm = () => {\r\n  const Disptach = useDispatch();\r\n  const islogin = useSelector((state) => state.uiauth.islogin);\r\n  const Enteredemail = React.createRef(null);\r\n  const EnteredPassword = React.createRef(null);\r\n  const EnteredConfirmPassword = React.createRef(null);\r\n  const onsubmitHandler = (event) => {\r\n    event.preventDefault();\r\n    const obj = {\r\n      email: Enteredemail.current.value,\r\n      password: EnteredPassword.current.value,\r\n      returnSecureToken: true,\r\n    };\r\n    if (obj.email === \"\" && obj.password === \"\") {\r\n      return;\r\n    }\r\n    if (islogin) {\r\n      Disptach(Sendlogin(obj));\r\n    }\r\n    if (!islogin && obj.password === EnteredConfirmPassword.current.value) {\r\n      Disptach(sendsignup(obj));\r\n    }\r\n\r\n    // console.log(obj);\r\n  };\r\n  const buttonToggle = () => {\r\n    Disptach(UisliceAction.setisLogin());\r\n  };\r\n  return (\r\n    <Container className=\"pt-5\">\r\n      <Row className=\"justify-content-md-center\">\r\n        <Col xs={12} md={4}>\r\n          <Form\r\n            className=\"shadow p-3 mt-5 bg-white rounded\"\r\n            onSubmit={onsubmitHandler}\r\n          >\r\n            <h3>\r\n              {islogin ? \"Login\" : \"SignUp\"}\r\n              <IconButton\r\n                size=\"large\"\r\n                aria-label=\"show 17 new notifications\"\r\n                color=\"inherit\"\r\n                style={{ marginLeft: \"auto\" }}\r\n              >\r\n                <LockPersonRounded />\r\n              </IconButton>\r\n            </h3>\r\n            <Form.Group controlId=\"email\">\r\n              <Form.Label>Email Address</Form.Label>\r\n              <Form.Control\r\n                type=\"email\"\r\n                placeholder=\"Enter email\"\r\n                ref={Enteredemail}\r\n              ></Form.Control>\r\n            </Form.Group>\r\n            <Form.Group controlId=\"password\">\r\n              <Form.Label>Password</Form.Label>\r\n              <Form.Control\r\n                type=\"password\"\r\n                placeholder=\"Enter password\"\r\n                autoComplete=\"off\"\r\n                ref={EnteredPassword}\r\n              ></Form.Control>\r\n            </Form.Group>\r\n            {!islogin && (\r\n              <Form.Group controlId=\"Confirm Password\">\r\n                <Form.Label>Confirm Password</Form.Label>\r\n                <Form.Control\r\n                  type=\"password\"\r\n                  placeholder=\"Enter password\"\r\n                  ref={EnteredConfirmPassword}\r\n                ></Form.Control>\r\n              </Form.Group>\r\n            )}\r\n            <Button\r\n              type=\"submit\"\r\n              variant=\"primary\"\r\n              className=\"btn btn-primary btn-lg btn-block mb-2\"\r\n            >\r\n              {islogin ? \"Login\" : \"SignUp\"}\r\n            </Button>\r\n            <Form.Group controlId=\"btn-secondary\">\r\n              <Button\r\n                className=\"btn btn-secondary btn-lg btn-block\"\r\n                onClick={buttonToggle}\r\n              >\r\n                {islogin ? \"SignUp\" : \"Login existing account\"}\r\n              </Button>\r\n            </Form.Group>\r\n          </Form>\r\n          <p>TestLogin id =demo@gmail.com</p>\r\n          <p>TestLogin password =123456</p>\r\n        </Col>\r\n      </Row>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default AuthForm;\r\n","C:\\Users\\Admin\\Desktop\\Mail-Box-Clients\\MailBox -Client\\src\\Store\\Action-thunk.js",[],"C:\\Users\\Admin\\Desktop\\Mail-Box-Clients\\MailBox -Client\\src\\Component\\TextEditing\\TextEditing.js",[],"C:\\Users\\Admin\\Desktop\\Mail-Box-Clients\\MailBox -Client\\src\\Store\\MailSlice.js",["101"],"import { createSlice } from \"@reduxjs/toolkit\";\r\n\r\nconst initialval = {\r\n  // sendMail: false,\r\n  // getMail: false,\r\n  items: [],\r\n  count: 0,\r\n  unread: 0,\r\n  messageView: {},\r\n  sentItem: [],\r\n};\r\n\r\nconst MailSlice = createSlice({\r\n  name: \"mail\",\r\n  initialState: initialval,\r\n  reducers: {\r\n    setSentData(state, action) {\r\n      state.sendMail = !state.sendMail;\r\n      state.count = state.count + 1;\r\n\r\n      console.log(\"success\");\r\n    },\r\n    // setGetMail(state, action) {\r\n    //   console.log(\"getmail\", state.unread);\r\n    // },\r\n    addItem(state, action) {\r\n      state.items = action.payload;\r\n\r\n      let Unreadmessage = 0;\r\n      state.items.map((item) => {\r\n        if (!item.readreceipt === true) {\r\n          Unreadmessage++;\r\n        }\r\n        return;\r\n      });\r\n      state.unread = Unreadmessage;\r\n      // console.log(state.unread);\r\n      // console.log(action.payload.transformeddata);\r\n    },\r\n    updataItems(state, action) {\r\n      state.count = state.count + 1;\r\n    },\r\n    DeleteItem(state, action) {\r\n      state.count = state.count + 1;\r\n      console.log(\"deleted\");\r\n    },\r\n    addMessageViewinfo(state, action) {\r\n      state.messageView = action.payload;\r\n      // console.log(\" addMessageViewinfo\", action.payload);\r\n    },\r\n    // RemovesentMail(state, action) {\r\n    //   // console.log(state.sentItem);\r\n    //   state.sentItem = action.payload;\r\n    // },\r\n  },\r\n});\r\nexport const MailSliceAction = MailSlice.actions;\r\nexport default MailSlice;\r\n","C:\\Users\\Admin\\Desktop\\Mail-Box-Clients\\MailBox -Client\\src\\Store\\Mail-thunk.js",["102"],"import { MailSliceAction } from \"./MailSlice\";\r\nimport { MymailSliceAction } from \"./MymailSlice\";\r\n\r\n//sending mail\r\nexport const sendMailHandler = (mailobj) => {\r\n  return async (Disptach) => {\r\n    let emailId = await mailobj.email.replace(/[&@.]/g, \"\");\r\n\r\n    const sendingmail = async () => {\r\n      const response = await fetch(\r\n        `https://mailbox-client-26e9b-default-rtdb.firebaseio.com/${emailId}/inbox.json`,\r\n        {\r\n          method: \"POST\",\r\n          body: JSON.stringify(mailobj),\r\n          headers: {\r\n            \"Content-Type\": \"application/json\",\r\n          },\r\n        }\r\n      );\r\n      const data = await response.json();\r\n      if (data.error) {\r\n        throw new Error(\"faild\");\r\n      }\r\n      //   console.log(data);\r\n      return data;\r\n    };\r\n    try {\r\n      await sendingmail();\r\n\r\n      // Disptach(MailSliceAction.setSentData());\r\n      //   console.log(data);\r\n    } catch (error) {\r\n      console.log(error.message);\r\n    }\r\n  };\r\n};\r\n\r\n//get all mail\r\nexport const getmailHandler = () => {\r\n  let emailId = localStorage.getItem(\"mailid\").replace(/[&@.]/g, \"\");\r\n  // console.log(emailId);\r\n  return async (Disptach) => {\r\n    const gettingMailList = async () => {\r\n      const response = await fetch(\r\n        `https://mailbox-client-26e9b-default-rtdb.firebaseio.com//${emailId}.json`,\r\n        {\r\n          method: \"GET\",\r\n        }\r\n      );\r\n      const data = await response.json();\r\n      // if (data.inbox) {\r\n      //   return data;\r\n      // }\r\n      // console.log(data.inbox);\r\n      if (data.error) {\r\n        console.log(data);\r\n        throw new Error(\"faild\");\r\n      }\r\n\r\n      return data;\r\n    };\r\n    try {\r\n      const data = await gettingMailList();\r\n      const items = data.inbox;\r\n      let sentItem = data.sentItem;\r\n      // console.log(\"sentItemin mail thunk getting data\", sentItem);\r\n      const transformeddata = [];\r\n\r\n      for (const key in items) {\r\n        const Obj = {\r\n          id: key,\r\n          ...items[key],\r\n        };\r\n        transformeddata.push(Obj);\r\n      }\r\n      Disptach(MailSliceAction.addItem(transformeddata));\r\n      if (sentItem) {\r\n        Disptach(MymailSliceAction.AddSenditemList(sentItem));\r\n      }\r\n    } catch (error) {\r\n      // console.log(\"error message\");\r\n      // console.log(data);\r\n    }\r\n  };\r\n};\r\n\r\n//Read readreceipt update\r\nexport const UpdateList = (obj) => {\r\n  return async (Dispatch) => {\r\n    let emailId = localStorage.getItem(\"mailid\").replace(/[&@.]/g, \"\");\r\n\r\n    const UpdateEmailList = async () => {\r\n      const response = await fetch(\r\n        `https://mailbox-client-26e9b-default-rtdb.firebaseio.com//${emailId}/inbox/${obj.id}.json`,\r\n        {\r\n          method: \"PUT\",\r\n          body: JSON.stringify({\r\n            email: obj.email,\r\n            subject: obj.subject,\r\n            text: obj.text,\r\n            From: obj.From,\r\n            readreceipt: true,\r\n          }),\r\n          headers: {\r\n            \"Content-Type\": \"application/json\",\r\n          },\r\n        }\r\n      );\r\n      const data = await response.json();\r\n      if (data.error) {\r\n        throw new Error(\"faild\");\r\n      }\r\n      return data;\r\n    };\r\n    try {\r\n      await UpdateEmailList();\r\n      Dispatch(MailSliceAction.updataItems());\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  };\r\n};\r\n//inbox mail delete\r\nexport const DeleteMail = (id) => {\r\n  return async (Dispatch) => {\r\n    let emailId = localStorage.getItem(\"mailid\").replace(/[&@.]/g, \"\");\r\n\r\n    const DeletingMail = async () => {\r\n      const response = await fetch(\r\n        `https://mailbox-client-26e9b-default-rtdb.firebaseio.com//${emailId}/inbox/${id}.json`,\r\n        {\r\n          method: \"DELETE\",\r\n          headers: {\r\n            \"Content-Type\": \"application/json\",\r\n          },\r\n        }\r\n      );\r\n      const data = await response.json();\r\n      if (data.error) {\r\n        console.log(data);\r\n        // throw new Error(\"faild\");\r\n      }\r\n      return data;\r\n    };\r\n    try {\r\n      const data = await DeletingMail();\r\n      Dispatch(MailSliceAction.DeleteItem());\r\n    } catch (error) {\r\n      // console.log(error);\r\n      Dispatch(MailSliceAction.DeleteItem());\r\n    }\r\n  };\r\n};\r\n\r\n//send maild upadte\r\nexport const UpdateMySentItem = (sentItem) => {\r\n  return async (Dispatch) => {\r\n    let emailId = localStorage.getItem(\"mailid\").replace(/[&@.]/g, \"\");\r\n\r\n    const UpdatedingmySendingItem = async () => {\r\n      const response = await fetch(\r\n        `https://mailbox-client-26e9b-default-rtdb.firebaseio.com/${emailId}/sentItem/.json`,\r\n        {\r\n          method: \"PUT\",\r\n          body: JSON.stringify(sentItem),\r\n          headers: {\r\n            \"Content-Type\": \"application/json\",\r\n          },\r\n        }\r\n      );\r\n      const data = await response.json();\r\n      if (data.error) {\r\n        throw new Error(\"faild\");\r\n      }\r\n      return data;\r\n    };\r\n    try {\r\n      const data = await UpdatedingmySendingItem();\r\n      // console.log(data);\r\n\r\n      // Dispatch( MymailSliceAction.sendItemUpdateTrigge());\r\n    } catch (error) {\r\n      // console.log(error);\r\n    }\r\n  };\r\n};\r\n","C:\\Users\\Admin\\Desktop\\Mail-Box-Clients\\MailBox -Client\\src\\Component\\InboxPage.js\\InboxPage.js",["103","104"],"import React from \"react\";\r\nimport \"./Inbox.css\";\r\n\r\nimport { Outlet } from \"react-router-dom\";\r\nimport InboxNavbar from \"./InboxNavbar\";\r\nimport { getmailHandler } from \"../../Store/Mail-thunk\";\r\nimport { useEffect } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport MessageView from \"./MessageView\";\r\nimport { Link, Route, Routes } from \"react-router-dom\";\r\nimport SentMessageView from \"./Sentmessage/sentMessageView\";\r\nimport { MailOutline, Send } from \"@mui/icons-material\";\r\nimport { Create, Drafts } from \"@mui/icons-material\";\r\nimport { Grid, List, Badge, IconButton, ListItem } from \"@mui/material\";\r\n\r\nimport NotificationsIcon from \"@mui/icons-material/Notifications\";\r\n\r\nconst InboxPage = () => {\r\n  const count = useSelector((state) => state.mail.count);\r\n  const unread = useSelector((state) => state.mail.unread);\r\n  const Disptach = useDispatch();\r\n\r\n  useEffect(() => {\r\n    Disptach(getmailHandler());\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (count > 0) {\r\n      Disptach(getmailHandler());\r\n    }\r\n  }, [count]);\r\n\r\n  useEffect(() => {\r\n    const intervelid = setInterval(() => {\r\n      // console.log(\"setintervelid\", intervelid);\r\n      Disptach(getmailHandler());\r\n    }, 2000);\r\n\r\n    return () => {\r\n      // console.log(\"clearintervelid\", intervelid);\r\n      clearInterval(intervelid);\r\n    };\r\n  });\r\n\r\n  const sendmailcartHandler = () => {\r\n    Disptach(getmailHandler());\r\n  };\r\n  const liststyle = { background: \"gold\", borderRadius: 3, marginTop: 3 };\r\n  return (\r\n    <>\r\n      <InboxNavbar></InboxNavbar>\r\n\r\n      <Grid container style={{ height: \"650px\" }}>\r\n        {/* <Box > */}\r\n        <Grid\r\n          item\r\n          xs={2}\r\n          bgcolor=\" #007bff\"\r\n          sx={{ display: { xs: \"none\", md: \"block\" } }}\r\n        >\r\n          <List component=\"nav\">\r\n            <Link to=\"text-edit\" style={{ textDecoration: \"none\" }}>\r\n              <ListItem button sx={liststyle}>\r\n                Compose\r\n                <IconButton\r\n                  size=\"large\"\r\n                  aria-label=\"show 17 new notifications\"\r\n                  color=\"inherit\"\r\n                  style={{ marginLeft: \"auto\" }}\r\n                >\r\n                  <Create></Create>\r\n                </IconButton>\r\n              </ListItem>\r\n            </Link>\r\n            <Link to=\"inboxlist\" style={{ textDecoration: \"none\" }}>\r\n              <ListItem button sx={liststyle}>\r\n                Inbox\r\n                <IconButton\r\n                  size=\"large\"\r\n                  aria-label=\"show 17 new notifications\"\r\n                  color=\"inherit\"\r\n                  style={{ marginLeft: \"auto\" }}\r\n                >\r\n                  {unread > 0 ? (\r\n                    <Badge badgeContent={unread} color=\"error\">\r\n                      <NotificationsIcon />\r\n                    </Badge>\r\n                  ) : (\r\n                    <MailOutline></MailOutline>\r\n                  )}\r\n                </IconButton>\r\n              </ListItem>\r\n            </Link>\r\n\r\n            <Link to=\"sentmessage\" style={{ textDecoration: \"none\" }}>\r\n              <ListItem button onClick={sendmailcartHandler} sx={liststyle}>\r\n                SentMail\r\n                <IconButton\r\n                  size=\"large\"\r\n                  aria-label=\"show 17 new notifications\"\r\n                  color=\"inherit\"\r\n                  style={{ marginLeft: \"auto\" }}\r\n                >\r\n                  <Send></Send>\r\n                </IconButton>\r\n              </ListItem>\r\n            </Link>\r\n            <Link to=\"#\" style={{ textDecoration: \"none\" }}>\r\n              <ListItem button sx={liststyle}>\r\n                Draft\r\n                <IconButton\r\n                  size=\"large\"\r\n                  aria-label=\"show 17 new notifications\"\r\n                  color=\"inherit\"\r\n                  style={{ marginLeft: \"auto\" }}\r\n                >\r\n                  <Drafts></Drafts>\r\n                </IconButton>\r\n              </ListItem>\r\n            </Link>\r\n          </List>\r\n        </Grid>\r\n        {/* </Box> */}\r\n        <Grid item xs={12} sm={12} md={10}>\r\n          <Routes>\r\n            <Route path=\"/inboxlist/mailview\" element={<MessageView />} />\r\n          </Routes>\r\n          <Routes>\r\n            <Route\r\n              path=\"/sentmessage/sentmailview\"\r\n              element={<SentMessageView />}\r\n            />\r\n          </Routes>\r\n\r\n          <Outlet />\r\n        </Grid>\r\n      </Grid>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default InboxPage;\r\n","C:\\Users\\Admin\\Desktop\\Mail-Box-Clients\\MailBox -Client\\src\\Component\\InboxPage.js\\InboxList.js",[],"C:\\Users\\Admin\\Desktop\\Mail-Box-Clients\\MailBox -Client\\src\\Component\\InboxPage.js\\InboxNavbar.js",["105","106","107","108","109","110"],"C:\\Users\\Admin\\Desktop\\Mail-Box-Clients\\MailBox -Client\\src\\Component\\InboxPage.js\\InboxListItem.js",[],"C:\\Users\\Admin\\Desktop\\Mail-Box-Clients\\MailBox -Client\\src\\Component\\InboxPage.js\\MessageView.js",[],"C:\\Users\\Admin\\Desktop\\Mail-Box-Clients\\MailBox -Client\\src\\Component\\InboxPage.js\\Sentmessage\\SentMessage.js",["111","112","113"],"import React, { useEffect } from \"react\";\r\nimport { ListGroup } from \"react-bootstrap\";\r\nimport SentMessageListItem from \"./SendmessageItem\";\r\nimport { List } from \"@mui/material\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\n// import { getmailHandler } from \"../../../Store/Mail-thunk\";\r\nconst SentMessage = () => {\r\n  const sentItem = useSelector((state) => state.mymail.sentItem);\r\n  // console.log(sentItem);\r\n  // const Disptach = useDispatch();\r\n  // useEffect(() => {\r\n  //   Disptach(getmailHandler());\r\n  // }, []);\r\n  return (\r\n    <>\r\n      <List>\r\n        {sentItem.map((item) => (\r\n          <SentMessageListItem\r\n            key={item.id}\r\n            email={item.email}\r\n            subject={item.subject}\r\n            text={item.text}\r\n            id={item.id}\r\n            readreceipt={item.readreceipt}\r\n          ></SentMessageListItem>\r\n        ))}\r\n      </List>\r\n    </>\r\n  );\r\n};\r\nexport default SentMessage;\r\n","C:\\Users\\Admin\\Desktop\\Mail-Box-Clients\\MailBox -Client\\src\\Component\\InboxPage.js\\Sentmessage\\SendmessageItem.js",[],"C:\\Users\\Admin\\Desktop\\Mail-Box-Clients\\MailBox -Client\\src\\Store\\MymailSlice.js",[],"C:\\Users\\Admin\\Desktop\\Mail-Box-Clients\\MailBox -Client\\src\\Component\\InboxPage.js\\Sentmessage\\sentMessageView.js",["114"],"import React from \"react\";\r\nimport { Button, Card } from \"react-bootstrap\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { useNavigate } from \"react-router-dom\";\r\n\r\nconst SentMessageView = (props) => {\r\n  const mymailmessageView = useSelector((state) => state.mymail.messageView);\r\n  const navigate = useNavigate();\r\n  // console.log(mymailmessageView, \" mymailmessageView\");\r\n  const replybuttonHandler = () => {\r\n    // navigate(\"/main/text-edit\");\r\n  };\r\n  return (\r\n    <React.Fragment>\r\n      <Card className=\"mt-3\">\r\n        <Card.Header>\r\n          <h3>{mymailmessageView.subject}</h3>\r\n        </Card.Header>\r\n        <Card.Body>\r\n          <p className=\"mb-5\">{mymailmessageView.text}</p>\r\n        </Card.Body>\r\n        <Card.Footer>\r\n          <h6>{mymailmessageView.email}</h6>\r\n          <Button onClick={replybuttonHandler}>ReSend</Button>\r\n        </Card.Footer>\r\n      </Card>\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default SentMessageView;\r\n","C:\\Users\\Admin\\Desktop\\Mail-Box-Clients\\MailBox -Client\\src\\Component\\InboxPage.js\\ToggleMenuButton.js",["115"],"import * as React from \"react\";\r\nimport Box from \"@mui/material/Box\";\r\nimport SwipeableDrawer from \"@mui/material/SwipeableDrawer\";\r\nimport List from \"@mui/material/List\";\r\nimport ListItem from \"@mui/material/ListItem\";\r\nimport ListItemButton from \"@mui/material/ListItemButton\";\r\nimport ListItemIcon from \"@mui/material/ListItemIcon\";\r\nimport ListItemText from \"@mui/material/ListItemText\";\r\nimport MailIcon from \"@mui/icons-material/Mail\";\r\nimport { IconButton } from \"@mui/material\";\r\nimport MenuIcon from \"@mui/icons-material/Menu\";\r\nimport { MailOutline, Send } from \"@mui/icons-material\";\r\nimport { Create, Drafts } from \"@mui/icons-material\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nexport default function ToggleButtonElement() {\r\n  const [state, setState] = React.useState({\r\n    left: false,\r\n  });\r\n\r\n  const toggleDrawer = (anchor, open) => (event) => {\r\n    console.log(\"function invoke\");\r\n    if (\r\n      event &&\r\n      event.type === \"keydown\" &&\r\n      (event.key === \"Tab\" || event.key === \"Shift\")\r\n    ) {\r\n      return;\r\n    }\r\n\r\n    setState({ ...state, [anchor]: open });\r\n  };\r\n  const obj = [\r\n    { name: \"Compose\", icon: <Create />, path: \"/main/text-edit\" },\r\n    { name: \"Inbox\", icon: <MailOutline />, path: \"/main/inboxlist\" },\r\n    {\r\n      name: \"Sent Mail\",\r\n      icon: <MailIcon></MailIcon>,\r\n      path: \"/main/sentmessage\",\r\n    },\r\n    { name: \"Drafts\", icon: <Drafts />, path: \"#\" },\r\n  ];\r\n  const list = (\r\n    <Box\r\n      sx={{\r\n        width: 250,\r\n        height: \"100%\",\r\n        backgroundColor: \" #007bff\",\r\n        position: \"fixed\",\r\n        color: \"inhert\",\r\n        // zIndex: 9999,\r\n      }}\r\n      role=\"presentation\"\r\n      onClick={toggleDrawer(\"left\", false)}\r\n      onKeyDown={toggleDrawer(\"left\", false)}\r\n    >\r\n      <List>\r\n        {obj.map(({ name, icon, path }) => (\r\n          <Link to={path} key={name} style={{ color: \"white\" }}>\r\n            <ListItem key={name} disablePadding>\r\n              <ListItemButton>\r\n                <ListItemIcon style={{ color: \"white\" }}>{icon}</ListItemIcon>\r\n                <ListItemText primary={name} />\r\n              </ListItemButton>\r\n            </ListItem>\r\n          </Link>\r\n        ))}\r\n      </List>\r\n    </Box>\r\n  );\r\n\r\n  return (\r\n    <>\r\n      <IconButton\r\n        size=\"large\"\r\n        // sx={{ mr: 2, color: \"white\" }}\r\n        onClick={toggleDrawer(\"left\", true)}\r\n        sx={{ display: { xs: \"block\", md: \"none\", mr: 2, color: \"white\" } }}\r\n      >\r\n        <MenuIcon />\r\n      </IconButton>\r\n\r\n      <SwipeableDrawer\r\n        anchor=\"left\"\r\n        open={state.left}\r\n        onClose={toggleDrawer(\"left\", false)}\r\n        onOpen={toggleDrawer(\"left\", true)}\r\n        ModalProps={{\r\n          keepMounted: true,\r\n          BackdropProps: {\r\n            invisible: true,\r\n          },\r\n        }}\r\n      >\r\n        {list}\r\n      </SwipeableDrawer>\r\n    </>\r\n  );\r\n}\r\n","C:\\Users\\Admin\\Desktop\\Mail-Box-Clients\\MailBox -Client\\src\\Component\\profile\\Profile.js",["116"],{"ruleId":"117","replacedBy":"118"},{"ruleId":"119","replacedBy":"120"},{"ruleId":"121","severity":1,"message":"122","line":34,"column":6,"nodeType":"123","endLine":34,"endColumn":23,"suggestions":"124"},{"ruleId":"121","severity":1,"message":"125","line":43,"column":6,"nodeType":"123","endLine":43,"endColumn":17,"suggestions":"126"},{"ruleId":"127","severity":1,"message":"128","line":3,"column":17,"nodeType":"129","messageId":"130","endLine":3,"endColumn":26},{"ruleId":"127","severity":1,"message":"131","line":8,"column":10,"nodeType":"129","messageId":"130","endLine":8,"endColumn":31},{"ruleId":"132","severity":1,"message":"133","line":34,"column":9,"nodeType":"134","messageId":"135","endLine":34,"endColumn":16},{"ruleId":"127","severity":1,"message":"136","line":146,"column":13,"nodeType":"129","messageId":"130","endLine":146,"endColumn":17},{"ruleId":"121","severity":1,"message":"137","line":25,"column":6,"nodeType":"123","endLine":25,"endColumn":8,"suggestions":"138"},{"ruleId":"121","severity":1,"message":"137","line":31,"column":6,"nodeType":"123","endLine":31,"endColumn":13,"suggestions":"139"},{"ruleId":"127","severity":1,"message":"128","line":1,"column":27,"nodeType":"129","messageId":"130","endLine":1,"endColumn":36},{"ruleId":"127","severity":1,"message":"140","line":15,"column":8,"nodeType":"129","messageId":"130","endLine":15,"endColumn":16},{"ruleId":"127","severity":1,"message":"141","line":23,"column":26,"nodeType":"129","messageId":"130","endLine":23,"endColumn":30},{"ruleId":"127","severity":1,"message":"142","line":69,"column":10,"nodeType":"129","messageId":"130","endLine":69,"endColumn":15},{"ruleId":"127","severity":1,"message":"143","line":69,"column":17,"nodeType":"129","messageId":"130","endLine":69,"endColumn":25},{"ruleId":"127","severity":1,"message":"144","line":76,"column":7,"nodeType":"129","messageId":"130","endLine":76,"endColumn":15},{"ruleId":"127","severity":1,"message":"128","line":1,"column":17,"nodeType":"129","messageId":"130","endLine":1,"endColumn":26},{"ruleId":"127","severity":1,"message":"145","line":2,"column":10,"nodeType":"129","messageId":"130","endLine":2,"endColumn":19},{"ruleId":"127","severity":1,"message":"146","line":5,"column":10,"nodeType":"129","messageId":"130","endLine":5,"endColumn":21},{"ruleId":"127","severity":1,"message":"147","line":8,"column":9,"nodeType":"129","messageId":"130","endLine":8,"endColumn":17},{"ruleId":"127","severity":1,"message":"148","line":12,"column":23,"nodeType":"129","messageId":"130","endLine":12,"endColumn":27},{"ruleId":"127","severity":1,"message":"149","line":4,"column":8,"nodeType":"129","messageId":"130","endLine":4,"endColumn":15},"no-native-reassign",["150"],"no-negated-in-lhs",["151"],"react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'islogin' and 'navi'. Either include them or remove the dependency array.","ArrayExpression",["152"],"React Hook useEffect has missing dependencies: 'Dispatch' and 'sentItem'. Either include them or remove the dependency array.",["153"],"no-unused-vars","'useEffect' is defined but never used.","Identifier","unusedVar","'LocalActivityOutlined' is defined but never used.","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ReturnStatement","expectedReturnValue","'data' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'Disptach'. Either include it or remove the dependency array.",["154"],["155"],"'MenuIcon' is defined but never used.","'Link' is defined but never used.","'state' is assigned a value but never used.","'setState' is assigned a value but never used.","'usermail' is assigned a value but never used.","'ListGroup' is defined but never used.","'useDispatch' is defined but never used.","'navigate' is assigned a value but never used.","'Send' is defined but never used.","'sampath' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"156","fix":"157"},{"desc":"158","fix":"159"},{"desc":"160","fix":"161"},{"desc":"162","fix":"163"},"Update the dependencies array to be: [islogin, loginlocalstore, navi]",{"range":"164","text":"165"},"Update the dependencies array to be: [Dispatch, sendcount, sentItem]",{"range":"166","text":"167"},"Update the dependencies array to be: [Disptach]",{"range":"168","text":"169"},"Update the dependencies array to be: [Disptach, count]",{"range":"170","text":"171"},[1209,1226],"[islogin, loginlocalstore, navi]",[1516,1527],"[Dispatch, sendcount, sentItem]",[953,955],"[Disptach]",[1051,1058],"[Disptach, count]"]