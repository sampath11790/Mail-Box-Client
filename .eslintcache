[{"C:\\Users\\Admin\\Desktop\\Mail-Box-Clients\\MailBox -Client\\src\\index.js":"1","C:\\Users\\Admin\\Desktop\\Mail-Box-Clients\\MailBox -Client\\src\\App.js":"2","C:\\Users\\Admin\\Desktop\\Mail-Box-Clients\\MailBox -Client\\src\\Store\\store.js":"3","C:\\Users\\Admin\\Desktop\\Mail-Box-Clients\\MailBox -Client\\src\\Store\\Auth.js":"4","C:\\Users\\Admin\\Desktop\\Mail-Box-Clients\\MailBox -Client\\src\\Store\\Uivisible.js":"5","C:\\Users\\Admin\\Desktop\\Mail-Box-Clients\\MailBox -Client\\src\\Component\\AuthForm\\AuthForm.js":"6","C:\\Users\\Admin\\Desktop\\Mail-Box-Clients\\MailBox -Client\\src\\Store\\Action-thunk.js":"7","C:\\Users\\Admin\\Desktop\\Mail-Box-Clients\\MailBox -Client\\src\\Component\\TextEditing\\TextEditing.js":"8","C:\\Users\\Admin\\Desktop\\Mail-Box-Clients\\MailBox -Client\\src\\Store\\MailSlice.js":"9","C:\\Users\\Admin\\Desktop\\Mail-Box-Clients\\MailBox -Client\\src\\Store\\Mail-thunk.js":"10"},{"size":391,"mtime":1669890652828,"results":"11","hashOfConfig":"12"},{"size":264,"mtime":1669901874020,"results":"13","hashOfConfig":"12"},{"size":331,"mtime":1669913957305,"results":"14","hashOfConfig":"12"},{"size":416,"mtime":1669890444771,"results":"15","hashOfConfig":"12"},{"size":389,"mtime":1669890450315,"results":"16","hashOfConfig":"12"},{"size":3378,"mtime":1669891184934,"results":"17","hashOfConfig":"12"},{"size":2187,"mtime":1669890447195,"results":"18","hashOfConfig":"12"},{"size":3027,"mtime":1669914221117,"results":"19","hashOfConfig":"12"},{"size":391,"mtime":1669914073011,"results":"20","hashOfConfig":"12"},{"size":905,"mtime":1669914339842,"results":"21","hashOfConfig":"12"},{"filePath":"22","messages":"23","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},"lj8f1e",{"filePath":"25","messages":"26","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"27","messages":"28","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"29","messages":"30","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"31","messages":"32","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"33","messages":"34","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"35","usedDeprecatedRules":"24"},{"filePath":"36","messages":"37","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"38","usedDeprecatedRules":"24"},{"filePath":"39","messages":"40","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"41","messages":"42","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"43","messages":"44","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\Admin\\Desktop\\Mail-Box-Clients\\MailBox -Client\\src\\index.js",[],["45","46"],"C:\\Users\\Admin\\Desktop\\Mail-Box-Clients\\MailBox -Client\\src\\App.js",["47"],"C:\\Users\\Admin\\Desktop\\Mail-Box-Clients\\MailBox -Client\\src\\Store\\store.js",[],"C:\\Users\\Admin\\Desktop\\Mail-Box-Clients\\MailBox -Client\\src\\Store\\Auth.js",[],"C:\\Users\\Admin\\Desktop\\Mail-Box-Clients\\MailBox -Client\\src\\Store\\Uivisible.js",[],"C:\\Users\\Admin\\Desktop\\Mail-Box-Clients\\MailBox -Client\\src\\Component\\AuthForm\\AuthForm.js",["48","49","50"],"import Button from \"react-bootstrap/Button\";\r\nimport Form from \"react-bootstrap/Form\";\r\nimport React from \"react\";\r\nimport { Col, Row, Container } from \"react-bootstrap\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { useRef } from \"react\";\r\nimport { sendsignup, Sendlogin } from \"../../Store/Action-thunk\";\r\nimport { AuthsliceAction } from \"../../Store/Auth\";\r\nimport { UisliceAction } from \"../../Store/Uivisible\";\r\n\r\nconst AuthForm = () => {\r\n  const Disptach = useDispatch();\r\n  const islogin = useSelector((state) => state.uiauth.islogin);\r\n  const Enteredname = React.createRef(null);\r\n  const Enteredemail = React.createRef(null);\r\n  const EnteredPassword = React.createRef(null);\r\n  const EnteredConfirmPassword = React.createRef(null);\r\n  const onsubmitHandler = (event) => {\r\n    event.preventDefault();\r\n    const obj = {\r\n      email: Enteredemail.current.value,\r\n      password: EnteredPassword.current.value,\r\n      returnSecureToken: true,\r\n    };\r\n    if (obj.email === \"\" && obj.password === \"\") {\r\n      return;\r\n    }\r\n    if (islogin) {\r\n      Disptach(Sendlogin(obj));\r\n    }\r\n    if (!islogin && obj.password === EnteredConfirmPassword.current.value) {\r\n      Disptach(sendsignup(obj));\r\n    }\r\n    // Disptach(AuthsliceAction.Login(obj));\r\n    //;\r\n    console.log(obj);\r\n  };\r\n  const buttonToggle = () => {\r\n    Disptach(UisliceAction.setisLogin());\r\n  };\r\n  return (\r\n    <Container className=\"pt-5\">\r\n      <Row className=\"justify-content-md-center\">\r\n        <Col xs={12} md={4}>\r\n          <Form\r\n            className=\"shadow p-3 mt-5 bg-white rounded\"\r\n            onSubmit={onsubmitHandler}\r\n          >\r\n            <h3>{islogin ? \"Login\" : \"SignUp\"}</h3>\r\n            <Form.Group controlId=\"email\">\r\n              <Form.Label>Email Address</Form.Label>\r\n              <Form.Control\r\n                type=\"email\"\r\n                placeholder=\"Enter email\"\r\n                ref={Enteredemail}\r\n              ></Form.Control>\r\n            </Form.Group>\r\n            <Form.Group controlId=\"password\">\r\n              <Form.Label>Password</Form.Label>\r\n              <Form.Control\r\n                type=\"password\"\r\n                placeholder=\"Enter password\"\r\n                autoComplete=\"off\"\r\n                ref={EnteredPassword}\r\n              ></Form.Control>\r\n            </Form.Group>\r\n            {!islogin && (\r\n              <Form.Group controlId=\"Confirm Password\">\r\n                <Form.Label>Confirm Password</Form.Label>\r\n                <Form.Control\r\n                  type=\"password\"\r\n                  placeholder=\"Enter password\"\r\n                  ref={EnteredConfirmPassword}\r\n                ></Form.Control>\r\n              </Form.Group>\r\n            )}\r\n            <Button\r\n              type=\"submit\"\r\n              variant=\"primary\"\r\n              className=\"btn btn-primary btn-lg btn-block mb-2\"\r\n            >\r\n              {islogin ? \"Login\" : \"SignUp\"}\r\n            </Button>\r\n            <Form.Group controlId=\"btn-secondary\">\r\n              <Button\r\n                className=\"btn btn-secondary btn-lg btn-block\"\r\n                onClick={buttonToggle}\r\n              >\r\n                {islogin ? \"SignUp\" : \"Login existing account\"}\r\n              </Button>\r\n            </Form.Group>\r\n          </Form>\r\n        </Col>\r\n      </Row>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default AuthForm;\r\n","C:\\Users\\Admin\\Desktop\\Mail-Box-Clients\\MailBox -Client\\src\\Store\\Action-thunk.js",["51"],"import { AuthsliceAction } from \"./Auth\";\r\n\r\nconst loginURL =\r\n  \"https://identitytoolkit.googleapis.com/v1/accounts:signInWithPassword?key=AIzaSyBHfDdJCB5KGcrwcnmpsK7V5Q8haFmqDGM\";\r\nconst signupUrl =\r\n  \"https://identitytoolkit.googleapis.com/v1/accounts:signUp?key=AIzaSyBHfDdJCB5KGcrwcnmpsK7V5Q8haFmqDGM\";\r\nconst RestUrl =\r\n  \"https://identitytoolkit.googleapis.com/v1/accounts:sendOobCode?key=AIzaSyBHfDdJCB5KGcrwcnmpsK7V5Q8haFmqDGM\";\r\nexport const sendsignup = (obj) => {\r\n  return async (dispatch) => {\r\n    const sendingAuth = async () => {\r\n      const response = await fetch(signupUrl, {\r\n        method: \"POST\",\r\n        body: JSON.stringify(obj),\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n        },\r\n      });\r\n\r\n      const data = await response.json();\r\n      if (data.error) {\r\n        alert(data.error.message);\r\n        throw new Error(data.error.message);\r\n      }\r\n\r\n      return data;\r\n    };\r\n    try {\r\n      const data = await sendingAuth();\r\n      dispatch(AuthsliceAction.Login(data));\r\n    } catch (error) {\r\n      console.log(error.message);\r\n    }\r\n  };\r\n};\r\n\r\nexport const Sendlogin = (obj) => {\r\n  return async (dispatch) => {\r\n    const sendingloginAuth = async () => {\r\n      const response = await fetch(loginURL, {\r\n        method: \"POST\",\r\n        body: JSON.stringify(obj),\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n        },\r\n      });\r\n\r\n      const data = await response.json();\r\n      if (data.error) {\r\n        alert(data.error.message);\r\n        throw new Error(data.error.message);\r\n      }\r\n\r\n      return data;\r\n    };\r\n    try {\r\n      const data = await sendingloginAuth();\r\n      const id = await data.idToken;\r\n      localStorage.setItem(\"id\", data.idToken);\r\n      localStorage.setItem(\"islogin\", \"true\");\r\n      localStorage.setItem(\"mailid\", obj.email);\r\n      //  console.log(id);\r\n      dispatch(AuthsliceAction.Login(id));\r\n    } catch (error) {\r\n      //   dispatch(\r\n      //     AuthsliceAction.Login({\r\n      //       status: \"error\",\r\n      //       title: \"error!\",\r\n      //       message: \"Sent cart data successfully!\",\r\n      //     })\r\n      //   );\r\n    }\r\n  };\r\n};\r\n","C:\\Users\\Admin\\Desktop\\Mail-Box-Clients\\MailBox -Client\\src\\Component\\TextEditing\\TextEditing.js",["52"],"C:\\Users\\Admin\\Desktop\\Mail-Box-Clients\\MailBox -Client\\src\\Store\\MailSlice.js",[],"C:\\Users\\Admin\\Desktop\\Mail-Box-Clients\\MailBox -Client\\src\\Store\\Mail-thunk.js",[],{"ruleId":"53","replacedBy":"54"},{"ruleId":"55","replacedBy":"56"},{"ruleId":"57","severity":1,"message":"58","line":1,"column":8,"nodeType":"59","messageId":"60","endLine":1,"endColumn":16},{"ruleId":"57","severity":1,"message":"61","line":6,"column":10,"nodeType":"59","messageId":"60","endLine":6,"endColumn":16},{"ruleId":"57","severity":1,"message":"62","line":8,"column":10,"nodeType":"59","messageId":"60","endLine":8,"endColumn":25},{"ruleId":"57","severity":1,"message":"63","line":14,"column":9,"nodeType":"59","messageId":"60","endLine":14,"endColumn":20},{"ruleId":"57","severity":1,"message":"64","line":7,"column":7,"nodeType":"59","messageId":"60","endLine":7,"endColumn":14},{"ruleId":"57","severity":1,"message":"65","line":1,"column":17,"nodeType":"59","messageId":"60","endLine":1,"endColumn":25},"no-native-reassign",["66"],"no-negated-in-lhs",["67"],"no-unused-vars","'AuthForm' is defined but never used.","Identifier","unusedVar","'useRef' is defined but never used.","'AuthsliceAction' is defined but never used.","'Enteredname' is assigned a value but never used.","'RestUrl' is assigned a value but never used.","'useState' is defined but never used.","no-global-assign","no-unsafe-negation"]