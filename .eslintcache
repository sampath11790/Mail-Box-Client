[{"C:\\Users\\Admin\\Desktop\\Mail-Box-Clients\\MailBox -Client\\src\\index.js":"1","C:\\Users\\Admin\\Desktop\\Mail-Box-Clients\\MailBox -Client\\src\\App.js":"2","C:\\Users\\Admin\\Desktop\\Mail-Box-Clients\\MailBox -Client\\src\\Store\\store.js":"3","C:\\Users\\Admin\\Desktop\\Mail-Box-Clients\\MailBox -Client\\src\\Store\\Auth.js":"4","C:\\Users\\Admin\\Desktop\\Mail-Box-Clients\\MailBox -Client\\src\\Store\\Uivisible.js":"5","C:\\Users\\Admin\\Desktop\\Mail-Box-Clients\\MailBox -Client\\src\\Component\\AuthForm\\AuthForm.js":"6","C:\\Users\\Admin\\Desktop\\Mail-Box-Clients\\MailBox -Client\\src\\Store\\Action-thunk.js":"7","C:\\Users\\Admin\\Desktop\\Mail-Box-Clients\\MailBox -Client\\src\\Component\\TextEditing\\TextEditing.js":"8","C:\\Users\\Admin\\Desktop\\Mail-Box-Clients\\MailBox -Client\\src\\Store\\MailSlice.js":"9","C:\\Users\\Admin\\Desktop\\Mail-Box-Clients\\MailBox -Client\\src\\Store\\Mail-thunk.js":"10","C:\\Users\\Admin\\Desktop\\Mail-Box-Clients\\MailBox -Client\\src\\Component\\InboxPage.js\\InboxPage.js":"11","C:\\Users\\Admin\\Desktop\\Mail-Box-Clients\\MailBox -Client\\src\\Component\\InboxPage.js\\InboxList.js":"12","C:\\Users\\Admin\\Desktop\\Mail-Box-Clients\\MailBox -Client\\src\\Component\\InboxPage.js\\InboxNavbar.js":"13","C:\\Users\\Admin\\Desktop\\Mail-Box-Clients\\MailBox -Client\\src\\Component\\InboxPage.js\\InboxListItem.js":"14","C:\\Users\\Admin\\Desktop\\Mail-Box-Clients\\MailBox -Client\\src\\Component\\InboxPage.js\\MessageView.js":"15"},{"size":500,"mtime":1669989560324,"results":"16","hashOfConfig":"17"},{"size":938,"mtime":1669992996376,"results":"18","hashOfConfig":"17"},{"size":331,"mtime":1669913957305,"results":"19","hashOfConfig":"17"},{"size":416,"mtime":1669890444771,"results":"20","hashOfConfig":"17"},{"size":389,"mtime":1669890450315,"results":"21","hashOfConfig":"17"},{"size":3378,"mtime":1669891184934,"results":"22","hashOfConfig":"17"},{"size":2189,"mtime":1669990285662,"results":"23","hashOfConfig":"17"},{"size":3054,"mtime":1669991327732,"results":"24","hashOfConfig":"17"},{"size":1363,"mtime":1670000472420,"results":"25","hashOfConfig":"17"},{"size":3710,"mtime":1669998974032,"results":"26","hashOfConfig":"17"},{"size":2791,"mtime":1670000756167,"results":"27","hashOfConfig":"17"},{"size":783,"mtime":1669977147511,"results":"28","hashOfConfig":"17"},{"size":1018,"mtime":1669993604068,"results":"29","hashOfConfig":"17"},{"size":1634,"mtime":1669999501013,"results":"30","hashOfConfig":"17"},{"size":782,"mtime":1669964863654,"results":"31","hashOfConfig":"17"},{"filePath":"32","messages":"33","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},"lj8f1e",{"filePath":"35","messages":"36","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"37","messages":"38","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"39","messages":"40","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"41","messages":"42","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"43","messages":"44","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"45","usedDeprecatedRules":"34"},{"filePath":"46","messages":"47","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"48","messages":"49","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"50","usedDeprecatedRules":"34"},{"filePath":"51","messages":"52","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"53","messages":"54","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"55","messages":"56","errorCount":0,"fatalErrorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"57","messages":"58","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"59","usedDeprecatedRules":"34"},{"filePath":"60","messages":"61","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"62","messages":"63","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"64","messages":"65","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"66","usedDeprecatedRules":"34"},"C:\\Users\\Admin\\Desktop\\Mail-Box-Clients\\MailBox -Client\\src\\index.js",[],["67","68"],"C:\\Users\\Admin\\Desktop\\Mail-Box-Clients\\MailBox -Client\\src\\App.js",["69"],"C:\\Users\\Admin\\Desktop\\Mail-Box-Clients\\MailBox -Client\\src\\Store\\store.js",[],"C:\\Users\\Admin\\Desktop\\Mail-Box-Clients\\MailBox -Client\\src\\Store\\Auth.js",[],"C:\\Users\\Admin\\Desktop\\Mail-Box-Clients\\MailBox -Client\\src\\Store\\Uivisible.js",[],"C:\\Users\\Admin\\Desktop\\Mail-Box-Clients\\MailBox -Client\\src\\Component\\AuthForm\\AuthForm.js",["70","71","72"],"import Button from \"react-bootstrap/Button\";\r\nimport Form from \"react-bootstrap/Form\";\r\nimport React from \"react\";\r\nimport { Col, Row, Container } from \"react-bootstrap\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { useRef } from \"react\";\r\nimport { sendsignup, Sendlogin } from \"../../Store/Action-thunk\";\r\nimport { AuthsliceAction } from \"../../Store/Auth\";\r\nimport { UisliceAction } from \"../../Store/Uivisible\";\r\n\r\nconst AuthForm = () => {\r\n  const Disptach = useDispatch();\r\n  const islogin = useSelector((state) => state.uiauth.islogin);\r\n  const Enteredname = React.createRef(null);\r\n  const Enteredemail = React.createRef(null);\r\n  const EnteredPassword = React.createRef(null);\r\n  const EnteredConfirmPassword = React.createRef(null);\r\n  const onsubmitHandler = (event) => {\r\n    event.preventDefault();\r\n    const obj = {\r\n      email: Enteredemail.current.value,\r\n      password: EnteredPassword.current.value,\r\n      returnSecureToken: true,\r\n    };\r\n    if (obj.email === \"\" && obj.password === \"\") {\r\n      return;\r\n    }\r\n    if (islogin) {\r\n      Disptach(Sendlogin(obj));\r\n    }\r\n    if (!islogin && obj.password === EnteredConfirmPassword.current.value) {\r\n      Disptach(sendsignup(obj));\r\n    }\r\n    // Disptach(AuthsliceAction.Login(obj));\r\n    //;\r\n    console.log(obj);\r\n  };\r\n  const buttonToggle = () => {\r\n    Disptach(UisliceAction.setisLogin());\r\n  };\r\n  return (\r\n    <Container className=\"pt-5\">\r\n      <Row className=\"justify-content-md-center\">\r\n        <Col xs={12} md={4}>\r\n          <Form\r\n            className=\"shadow p-3 mt-5 bg-white rounded\"\r\n            onSubmit={onsubmitHandler}\r\n          >\r\n            <h3>{islogin ? \"Login\" : \"SignUp\"}</h3>\r\n            <Form.Group controlId=\"email\">\r\n              <Form.Label>Email Address</Form.Label>\r\n              <Form.Control\r\n                type=\"email\"\r\n                placeholder=\"Enter email\"\r\n                ref={Enteredemail}\r\n              ></Form.Control>\r\n            </Form.Group>\r\n            <Form.Group controlId=\"password\">\r\n              <Form.Label>Password</Form.Label>\r\n              <Form.Control\r\n                type=\"password\"\r\n                placeholder=\"Enter password\"\r\n                autoComplete=\"off\"\r\n                ref={EnteredPassword}\r\n              ></Form.Control>\r\n            </Form.Group>\r\n            {!islogin && (\r\n              <Form.Group controlId=\"Confirm Password\">\r\n                <Form.Label>Confirm Password</Form.Label>\r\n                <Form.Control\r\n                  type=\"password\"\r\n                  placeholder=\"Enter password\"\r\n                  ref={EnteredConfirmPassword}\r\n                ></Form.Control>\r\n              </Form.Group>\r\n            )}\r\n            <Button\r\n              type=\"submit\"\r\n              variant=\"primary\"\r\n              className=\"btn btn-primary btn-lg btn-block mb-2\"\r\n            >\r\n              {islogin ? \"Login\" : \"SignUp\"}\r\n            </Button>\r\n            <Form.Group controlId=\"btn-secondary\">\r\n              <Button\r\n                className=\"btn btn-secondary btn-lg btn-block\"\r\n                onClick={buttonToggle}\r\n              >\r\n                {islogin ? \"SignUp\" : \"Login existing account\"}\r\n              </Button>\r\n            </Form.Group>\r\n          </Form>\r\n        </Col>\r\n      </Row>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default AuthForm;\r\n","C:\\Users\\Admin\\Desktop\\Mail-Box-Clients\\MailBox -Client\\src\\Store\\Action-thunk.js",["73"],"C:\\Users\\Admin\\Desktop\\Mail-Box-Clients\\MailBox -Client\\src\\Component\\TextEditing\\TextEditing.js",["74"],"import React, { useState } from \"react\";\r\nimport { Editor } from \"react-draft-wysiwyg\";\r\nimport \"react-draft-wysiwyg/dist/react-draft-wysiwyg.css\";\r\nimport { Row, Col, Container, Card, Button } from \"react-bootstrap\";\r\nimport { Form } from \"react-bootstrap\";\r\nimport \"./TextEditing.css\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { sendMailHandler } from \"../../Store/Mail-thunk\";\r\n\r\n// import { EditorState, convertFromRaw, convertToRaw } from \"draft-js\";\r\n\r\nconst TextEditing = () => {\r\n  const Disptach = useDispatch();\r\n  const Enteredemail = React.createRef(null);\r\n  const Enteredsubject = React.createRef(null);\r\n  const Enteredtext = React.createRef(null);\r\n  const FormsubmitHandler = (event) => {\r\n    event.preventDefault();\r\n    const mailData = {\r\n      email: Enteredemail.current.value,\r\n      subject: Enteredsubject.current.value,\r\n      text: Enteredtext.current.value,\r\n      readreceipt: false,\r\n    };\r\n    Disptach(sendMailHandler(mailData));\r\n    console.log(mailData, \"TextEditing-FormsubmitHandler\");\r\n  };\r\n  return (\r\n    <React.Fragment>\r\n      <Container fluid>\r\n        <Row>\r\n          <Col>\r\n            <Form className=\"pt-1  pr-3\" onSubmit={FormsubmitHandler}>\r\n              <Card style={{ width: \"50rem\" }}>\r\n                {/* <Card.Header>\r\n                  <h3>welcome </h3>\r\n                </Card.Header> */}\r\n                <Card.Body className=\"colours\">\r\n                  <Form.Group controlId=\"email\">\r\n                    <Form.Label>Email Address</Form.Label>\r\n                    <Form.Control\r\n                      size=\"sm\"\r\n                      type=\"email\"\r\n                      placeholder=\"Enter email\"\r\n                      ref={Enteredemail}\r\n                    ></Form.Control>\r\n                  </Form.Group>\r\n                  <Form.Group controlId=\"subject\">\r\n                    <Form.Label>subject</Form.Label>\r\n                    <Form.Control\r\n                      type=\"text\"\r\n                      placeholder=\"Enter subject\"\r\n                      ref={Enteredsubject}\r\n                    ></Form.Control>\r\n                  </Form.Group>\r\n                  <Form.Group controlId=\"message\">\r\n                    <Form.Label>message</Form.Label>\r\n                    <Form.Control as=\"textarea\" rows={5} ref={Enteredtext} />\r\n                  </Form.Group>\r\n                </Card.Body>\r\n\r\n                <Card.Footer>\r\n                  <Editor\r\n                    // editorState={editorState}\r\n                    toolbarClassName=\"toolbarClassName\"\r\n                    wrapperClassName=\"wrapperClassName\"\r\n                    editorClassName=\"editorClassName\"\r\n                    // onEditorStateChange={updateTextDescription}\r\n                  />\r\n                  <Button variant=\"primary\" type=\"submit\">\r\n                    Send\r\n                  </Button>\r\n                </Card.Footer>\r\n              </Card>\r\n            </Form>\r\n          </Col>\r\n        </Row>\r\n      </Container>\r\n    </React.Fragment>\r\n  );\r\n};\r\nexport default TextEditing;\r\n","C:\\Users\\Admin\\Desktop\\Mail-Box-Clients\\MailBox -Client\\src\\Store\\MailSlice.js",["75","76"],"C:\\Users\\Admin\\Desktop\\Mail-Box-Clients\\MailBox -Client\\src\\Store\\Mail-thunk.js",["77"],"C:\\Users\\Admin\\Desktop\\Mail-Box-Clients\\MailBox -Client\\src\\Component\\InboxPage.js\\InboxPage.js",["78","79","80","81","82","83","84"],"C:\\Users\\Admin\\Desktop\\Mail-Box-Clients\\MailBox -Client\\src\\Component\\InboxPage.js\\InboxList.js",["85","86","87"],"import React from \"react\";\r\nimport { ListGroup } from \"react-bootstrap\";\r\nimport InboxListItem from \"./InboxListItem\";\r\nimport { useEffect } from \"react\";\r\nimport { UpdateList } from \"../../Store/Mail-thunk\";\r\n\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nconst InboxList = () => {\r\n  const Items = useSelector((state) => state.mail.items);\r\n\r\n  return (\r\n    <>\r\n      <ListGroup as=\"ul\" variant=\"primary\">\r\n        {Items.map((item) => (\r\n          <InboxListItem\r\n            key={item.id}\r\n            email={item.email}\r\n            message={item.subject}\r\n            text={item.text}\r\n            id={item.id}\r\n            readreceipt={item.readreceipt}\r\n          ></InboxListItem>\r\n        ))}\r\n      </ListGroup>\r\n    </>\r\n  );\r\n};\r\nexport default InboxList;\r\n","C:\\Users\\Admin\\Desktop\\Mail-Box-Clients\\MailBox -Client\\src\\Component\\InboxPage.js\\InboxNavbar.js",["88","89","90","91","92"],"C:\\Users\\Admin\\Desktop\\Mail-Box-Clients\\MailBox -Client\\src\\Component\\InboxPage.js\\InboxListItem.js",[],"C:\\Users\\Admin\\Desktop\\Mail-Box-Clients\\MailBox -Client\\src\\Component\\InboxPage.js\\MessageView.js",["93"],"import React from \"react\";\r\nimport { Button, Card } from \"react-bootstrap\";\r\nimport CloseButton from \"react-bootstrap\";\r\n\r\nconst MessageView = (props) => {\r\n  return (\r\n    <React.Fragment>\r\n      <Card className=\"mt-3\">\r\n        <Card.Header>\r\n          <h3>some subject</h3>\r\n        </Card.Header>\r\n        <Card.Body>\r\n          <p className=\"mb-5\">\r\n            Aww yeah, you successfully read this important alert message. This\r\n            example text is going to run a bit longer so that you can see how\r\n            spacing within an alert works with this kind of content.\r\n          </p>\r\n        </Card.Body>\r\n        <Card.Footer>\r\n          <Button>Reply</Button>\r\n        </Card.Footer>\r\n      </Card>\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default MessageView;\r\n",{"ruleId":"94","replacedBy":"95"},{"ruleId":"96","replacedBy":"97"},{"ruleId":"98","severity":1,"message":"99","line":6,"column":8,"nodeType":"100","messageId":"101","endLine":6,"endColumn":19},{"ruleId":"98","severity":1,"message":"102","line":6,"column":10,"nodeType":"100","messageId":"101","endLine":6,"endColumn":16},{"ruleId":"98","severity":1,"message":"103","line":8,"column":10,"nodeType":"100","messageId":"101","endLine":8,"endColumn":25},{"ruleId":"98","severity":1,"message":"104","line":14,"column":9,"nodeType":"100","messageId":"101","endLine":14,"endColumn":20},{"ruleId":"98","severity":1,"message":"105","line":7,"column":7,"nodeType":"100","messageId":"101","endLine":7,"endColumn":14},{"ruleId":"98","severity":1,"message":"106","line":1,"column":17,"nodeType":"100","messageId":"101","endLine":1,"endColumn":25},{"ruleId":"107","severity":1,"message":"108","line":28,"column":31,"nodeType":"109","messageId":"110","endLine":28,"endColumn":33},{"ruleId":"111","severity":1,"message":"112","line":31,"column":9,"nodeType":"113","messageId":"114","endLine":31,"endColumn":16},{"ruleId":"98","severity":1,"message":"115","line":131,"column":13,"nodeType":"100","messageId":"101","endLine":131,"endColumn":17},{"ruleId":"98","severity":1,"message":"116","line":3,"column":21,"nodeType":"100","messageId":"101","endLine":3,"endColumn":25},{"ruleId":"98","severity":1,"message":"117","line":3,"column":27,"nodeType":"100","messageId":"101","endLine":3,"endColumn":33},{"ruleId":"98","severity":1,"message":"118","line":5,"column":8,"nodeType":"100","messageId":"101","endLine":5,"endColumn":17},{"ruleId":"98","severity":1,"message":"119","line":7,"column":8,"nodeType":"100","messageId":"101","endLine":7,"endColumn":19},{"ruleId":"98","severity":1,"message":"120","line":11,"column":10,"nodeType":"100","messageId":"101","endLine":11,"endColumn":20},{"ruleId":"121","severity":1,"message":"122","line":25,"column":6,"nodeType":"123","endLine":25,"endColumn":8,"suggestions":"124"},{"ruleId":"121","severity":1,"message":"122","line":31,"column":6,"nodeType":"123","endLine":31,"endColumn":13,"suggestions":"125"},{"ruleId":"98","severity":1,"message":"126","line":4,"column":10,"nodeType":"100","messageId":"101","endLine":4,"endColumn":19},{"ruleId":"98","severity":1,"message":"120","line":5,"column":10,"nodeType":"100","messageId":"101","endLine":5,"endColumn":20},{"ruleId":"98","severity":1,"message":"127","line":7,"column":23,"nodeType":"100","messageId":"101","endLine":7,"endColumn":34},{"ruleId":"98","severity":1,"message":"128","line":3,"column":35,"nodeType":"100","messageId":"101","endLine":3,"endColumn":38},{"ruleId":"98","severity":1,"message":"129","line":3,"column":40,"nodeType":"100","messageId":"101","endLine":3,"endColumn":43},{"ruleId":"98","severity":1,"message":"130","line":3,"column":45,"nodeType":"100","messageId":"101","endLine":3,"endColumn":54},{"ruleId":"98","severity":1,"message":"131","line":5,"column":10,"nodeType":"100","messageId":"101","endLine":5,"endColumn":13},{"ruleId":"132","severity":1,"message":"133","line":12,"column":11,"nodeType":"134","endLine":15,"endColumn":12},{"ruleId":"98","severity":1,"message":"135","line":3,"column":8,"nodeType":"100","messageId":"101","endLine":3,"endColumn":19},"no-native-reassign",["136"],"no-negated-in-lhs",["137"],"no-unused-vars","'MessageView' is defined but never used.","Identifier","unusedVar","'useRef' is defined but never used.","'AuthsliceAction' is defined but never used.","'Enteredname' is assigned a value but never used.","'RestUrl' is assigned a value but never used.","'useState' is defined but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ReturnStatement","expectedReturnValue","'data' is assigned a value but never used.","'Form' is defined but never used.","'Button' is defined but never used.","'InboxList' is defined but never used.","'TextEditing' is defined but never used.","'UpdateList' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'Disptach'. Either include it or remove the dependency array.","ArrayExpression",["138"],["139"],"'useEffect' is defined but never used.","'useDispatch' is defined but never used.","'Row' is defined but never used.","'Col' is defined but never used.","'ListGroup' is defined but never used.","'Nav' is defined but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'CloseButton' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"140","fix":"141"},{"desc":"142","fix":"143"},"Update the dependencies array to be: [Disptach]",{"range":"144","text":"145"},"Update the dependencies array to be: [Disptach, count]",{"range":"146","text":"147"},[960,962],"[Disptach]",[1058,1065],"[Disptach, count]"]